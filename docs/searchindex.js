Search.setIndex({"docnames": ["anomaly_detection", "api", "calibration", "classification", "conformalization", "getting_started", "index", "metrics", "nonconformity_scores", "object_detection", "plotting", "prediction", "prediction_sets", "regression", "splitting", "theory_overview", "utils"], "filenames": ["anomaly_detection.rst", "api.rst", "calibration.rst", "classification.rst", "conformalization.rst", "getting_started.rst", "index.rst", "metrics.rst", "nonconformity_scores.rst", "object_detection.rst", "plotting.rst", "prediction.rst", "prediction_sets.rst", "regression.rst", "splitting.rst", "theory_overview.rst", "utils.rst"], "titles": ["\ud83d\udea9 Anomaly detection", "\ud83d\udcbb API", "Calibration", "\ud83d\udcca Classification", "Conformalization", "\ud83d\ude80 Quickstart", "Welcome to puncc\u2019s documentation!", "\ud83d\udccf Metrics", "Nonconformity scores", "\ud83d\uddbc\ufe0f Object Detection", "\ud83d\uddbc\ufe0f Plotting", "Prediction", "Prediction sets", "\ud83d\udcc8 Regression", "Splitting", "\ud83d\udcc8 Theory overview", "Utils"], "terms": {"current": [0, 3, 4, 9, 13], "implement": [0, 1, 2, 3, 4, 5, 8, 9, 12, 13, 14], "conform": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 13], "detector": [0, 5], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 16], "list": [0, 1, 3, 9, 11, 13, 14], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16], "page": [0, 3, 5, 9, 13, 15], "each": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15], "wrapper": [0, 1, 3, 5, 9, 11, 13], "calibr": [0, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16], "decis": [0, 2], "threshold": [0, 2, 5], "pass": [0, 1, 2, 3, 4, 9, 10, 11, 13], "argument": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13], "object": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13], "constructor": [0, 1, 2, 3, 5, 9, 11, 13], "Such": [0, 1, 2, 3, 5, 13], "model": [0, 1, 2, 3, 4, 6, 9, 11, 13, 15], "need": [0, 1, 2, 3, 4, 5, 11, 13, 14, 15], "fit": [0, 1, 2, 3, 4, 5, 9, 11, 13, 14, 15], "predict": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 13], "method": [0, 1, 2, 3, 4, 5, 9, 11, 13, 15, 16], "modul": [0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13], "from": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16], "api": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 16], "ensur": [0, 3, 5, 13], "complianc": [0, 1, 3, 13], "variou": [0, 3, 5, 13, 15], "ml": [0, 1, 3, 5, 11, 13], "dl": [0, 1, 3, 5, 13], "librari": [0, 3, 5, 6, 13], "kera": [0, 1, 3, 5, 11, 13], "scikit": [0, 3, 5, 13], "learn": [0, 3, 5, 13, 15], "puncc": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16], "class": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15], "deel": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 16], "anomaly_detect": [0, 5], "splitcad": [0, 5], "predictor": [0, 2, 3, 4, 5, 9, 11, 13, 15], "train": [0, 1, 2, 3, 4, 5, 9, 11, 13, 14, 15], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "random_st": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 14], "none": [0, 2, 3, 4, 9, 10, 11, 13, 14, 16], "split": [0, 1, 2, 3, 4, 5, 9, 13], "base": [0, 1, 2, 4, 11, 13, 15], "laxhammar": 0, "": [0, 2, 3, 4, 5, 7, 9, 11, 13, 15], "algorithm": [0, 2, 3, 5, 6, 11, 15], "The": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "through": [0, 5, 15], "underli": [0, 1, 4, 5, 11, 13, 15], "score": [0, 1, 2, 3, 4, 5, 9, 12, 13, 15], "For": [0, 1, 3, 5, 7, 8, 9, 11, 12, 13, 15], "more": [0, 1, 2, 3, 5, 9, 11, 13, 15], "detail": [0, 3, 5, 11, 13], "we": [0, 1, 2, 3, 5, 9, 11, 13, 15, 16], "refer": [0, 3, 9, 13], "user": [0, 1, 2, 3, 5, 6, 9, 13, 15], "theori": [0, 3, 6, 9, 13], "overview": [0, 3, 6, 9, 13], "paramet": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16], "basepredictor": [0, 1, 3, 4, 5, 9, 11, 13], "bool": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 16], "fals": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 16], "re": [0, 4, 9, 13], "default": [0, 2, 3, 4, 5, 9, 11, 13, 16], "float": [0, 2, 3, 4, 7, 8, 9, 12, 13, 14, 16], "random": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15], "seed": [0, 1, 3, 9, 10, 13, 14], "us": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 15], "when": [0, 1, 2, 3, 8, 9, 12, 13, 15, 16], "doe": [0, 1, 3, 9, 13, 15], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "custom": [0, 1, 3, 9, 13], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15], "import": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13], "numpi": [0, 2, 3, 5, 9, 10, 11, 13], "np": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 16], "sklearn": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13], "ensembl": [0, 1, 3, 4, 5, 9, 11, 13], "isolationforest": [0, 5], "dataset": [0, 1, 2, 3, 4, 9, 10, 11, 13, 15, 16], "make_moon": [0, 2, 5], "matplotlib": [0, 2, 5, 10], "pyplot": [0, 2, 5, 10], "plt": [0, 2, 5, 10], "gener": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "two": [0, 1, 2, 8, 10, 11, 12, 13, 15], "moon": [0, 2], "4": [0, 1, 2, 3, 4, 5, 7, 9, 13], "n_sampl": [0, 1, 2, 3, 4, 5, 9, 10, 13], "1000": [0, 1, 2, 3, 4, 9, 11, 13], "nois": [0, 2, 5, 10], "0": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16], "05": [0, 2, 5, 15], "arrai": [0, 2, 5, 7, 9, 11, 13, 14, 16], "5": [0, 2, 5, 11], "25": [0, 2, 5], "uniformli": [0, 5], "new": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15], "test": [0, 1, 2, 3, 4, 5, 9, 13, 15], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15], "point": [0, 1, 2, 4, 5, 8, 10, 11, 13, 14, 15], "rng": [0, 2, 5], "randomst": [0, 2, 5], "42": [0, 1, 2, 4, 5], "z_test": [0, 5], "uniform": [0, 2, 5, 11], "low": [0, 1, 2, 5], "6": [0, 1, 2, 5], "high": [0, 2, 5, 15], "size": [0, 1, 2, 3, 5, 7, 8, 10, 12, 15, 16], "150": 0, "2": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 15], "nonconform": [0, 1, 2, 3, 4, 5, 9, 12, 13, 15], "defin": [0, 1, 2, 3, 5, 6, 7, 9, 13, 14], "IF": [0, 5], "By": [0, 2, 5, 16], "score_sampl": [0, 2, 5], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16], "opposit": [0, 2, 5], "redefin": [0, 1, 3, 5], "output": [0, 1, 5, 6, 10, 11, 15], "adpredictor": [0, 5], "def": [0, 1, 2, 3, 5], "self": [0, 1, 3, 5], "x": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15], "instanti": [0, 2, 4, 5, 11], "isol": [0, 5], "forest": [0, 1, 3, 5, 9, 11, 13], "wrap": [0, 1, 3, 4, 5, 11, 13, 14], "if_predictor": [0, 5], "cad": [0, 2, 5], "top": [0, 5, 15], "if_cad": [0, 5], "proper": [0, 2, 5, 15], "sampl": [0, 1, 2, 3, 4, 5, 9, 13, 14, 15, 16], "randomli": [0, 1, 3, 5, 9, 13], "ration": [0, 5], "7": [0, 5], "3": [0, 3, 5, 8, 12, 15], "respect": [0, 1, 2, 3, 5, 9, 11, 13, 15], "z": [0, 2, 5], "fit_ratio": [0, 3, 5, 9, 13], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16], "maximum": [0, 2, 3, 5, 9, 13, 15], "rate": [0, 2, 5, 15], "1": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "alpha": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 15, 16], "01": [0, 2], "call": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15], "which": [0, 1, 2, 3, 5, 8, 11, 12, 15, 16], "anomal": [0, 2, 5], "result": [0, 2, 5], "not_anomali": [0, 2], "invert": [0, 2, 5], "plot": [0, 1, 2, 5, 6], "scatter": [0, 2, 5], "10": [0, 1, 2, 4, 5, 10, 11, 15], "label": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15], "inlier": [0, 2, 5], "marker": [0, 2, 5], "color": [0, 2, 5, 10], "red": [0, 2, 5, 10], "40": [0, 2, 5], "blue": [0, 2, 5], "normal": [0, 2, 4, 5, 8, 10, 15], "xtick": [0, 2], "ytick": [0, 2], "legend": [0, 2, 5, 10], "8": [0, 2, 3, 9, 13], "z_fit": 0, "z_calib": 0, "kwarg": [0, 1, 3, 4, 9, 11, 13], "comput": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 15, 16], "If": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16], "calib": [0, 1, 2, 3, 5, 9, 13], "subset": [0, 1, 2, 3, 5, 9, 13, 14], "w": [0, 1, 2, 3, 4, 5, 9, 13, 15, 16], "r": [0, 1, 2, 3, 4, 5, 8, 9, 13, 15], "t": [0, 1, 2, 3, 4, 5, 9, 11, 13, 15], "In": [0, 1, 2, 3, 5, 9, 11, 13, 15], "case": [0, 1, 2, 3, 4, 9, 13, 15], "perform": [0, 3, 9, 13, 15], "given": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "ignor": [0, 3, 5, 9, 10, 13], "ani": [0, 1, 3, 4, 6, 9, 11, 13, 15], "iter": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 16], "proport": [0, 3, 7, 9, 12, 13], "assign": [0, 1, 2, 3, 9, 13, 14, 15], "dict": [0, 2, 3, 4, 9, 11, 13], "configur": [0, 1, 3, 4, 9, 10, 11, 13], "rais": [0, 2, 3, 4, 8, 9, 11, 12, 13, 16], "runtimeerror": [0, 2, 3, 4, 9, 11, 13], "whether": [0, 5, 10], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16], "taken": 0, "target": [0, 1, 2, 3, 4, 5, 7, 9, 13, 15, 16], "fdr": [0, 5], "outlier": [0, 5], "tag": 0, "otherwis": [0, 1, 2, 3, 7, 10, 15], "type": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "level": [1, 2, 3, 4, 7, 9, 13, 15], "offer": [1, 2], "flexibl": 1, "let": [1, 5, 15], "sai": 1, "want": [1, 2, 5, 11], "neural": [1, 3, 15], "network": [1, 3, 15], "interv": [1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 16], "estim": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16], "cross": [1, 13], "valid": [1, 13], "plan": 1, "experi": [1, 15], "differ": [1, 4, 5, 8, 15], "other": [1, 5], "can": [1, 2, 4, 5, 6, 15], "fulli": 1, "construct": [1, 2, 5, 15], "propos": [1, 15], "paradigm": 1, "It": [1, 5, 6, 15], "boil": [1, 15], "down": [1, 15], "assembl": 1, "A": [1, 11, 13, 14, 15], "strategi": [1, 4, 14], "induct": [1, 5], "cp": [1, 3, 5, 9, 13, 15], "crossvalcpaggreg": [1, 4], "dualpredictor": [1, 4, 11, 13], "idpredictor": [1, 11], "meanvarpredictor": [1, 11, 13], "basecalibr": [1, 2, 4, 8, 12], "cvpluscalibr": [1, 2], "scorecalibr": [1, 2], "basesplitt": [1, 4, 14], "idsplitt": [1, 14], "randomsplitt": [1, 14], "kfoldsplitt": [1, 4, 14], "util": [1, 3, 5, 11], "alpha_calib_check": [1, 16], "quantil": [1, 2, 8, 11, 12, 13, 16], "absolute_differ": [1, 8], "cqr_score": [1, 8], "raps_scor": [1, 8], "raps_score_build": [1, 8], "scaled_ad": [1, 8], "scaled_bbox_differ": [1, 8], "constant_bbox": [1, 12], "constant_interv": [1, 4, 12], "cqr_interv": [1, 12], "raps_set": [1, 12], "raps_set_build": [1, 12], "scaled_bbox": [1, 12], "scaled_interv": [1, 12], "canva": [1, 4], "procedur": [1, 4, 5, 9, 13, 15], "instanc": [1, 4, 7, 11], "explain": 1, "later": [1, 5], "linear_model": [1, 4, 5, 11], "regress": [1, 2, 3, 4, 6, 9, 10, 11], "linear": [1, 4, 5], "linearregress": [1, 4, 5, 11], "definit": [1, 2, 4], "my_predictor": 1, "built": [1, 4, 12], "build": [1, 3, 4, 8, 11, 12, 15], "function": [1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15], "altern": 1, "sever": [1, 5, 7, 15], "readi": [1, 2], "nonconf": 1, "nonconformity_scor": [1, 2, 4, 8], "my_ncf": 1, "y_pred": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "y_true": [1, 2, 7, 8, 10, 13], "ab": [1, 2, 9, 15], "prediction_set": [1, 2, 4, 12], "my_psf": 1, "nonconf_scores_quantil": 1, "y_lower": [1, 2, 4, 9, 13], "y_upper": [1, 2, 4], "my_calibr": 1, "nonconf_score_func": [1, 2, 4], "pred_set_func": [1, 2, 4], "k": [1, 2, 4, 13, 14, 15], "fold": [1, 2, 4, 13, 14, 15], "produc": [1, 2, 4, 5, 15], "20": [1, 3, 4, 9, 10, 13], "kfold_splitt": [1, 4], "conformal_predictor": [1, 4], "accordingli": [1, 4], "x_train": [1, 3, 4, 5, 11], "y_train": [1, 3, 4, 5, 11], "full": 1, "And": 1, "y_pred_low": [1, 2, 5, 7, 10, 13], "y_pred_upp": [1, 5, 7, 10, 13], "chosen": [1, 5, 15], "error": [1, 2, 6, 7, 15], "signific": [1, 2, 3, 4, 7, 9, 13, 15], "coverag": [1, 3, 5, 7, 9, 13, 15], "90": [1, 5, 11], "x_new": [1, 11], "code": [1, 5, 11], "snippet": [1, 11], "previou": 1, "cvplu": [1, 13], "like": [1, 3, 4, 8, 12, 15], "below": [1, 2, 5, 11, 15], "make_regress": [1, 4, 9, 10, 13], "model_select": [1, 2, 3, 4, 9, 13], "train_test_split": [1, 2, 3, 4, 9, 13], "plot_prediction_interv": [1, 10], "metric": [1, 3, 5, 6, 9, 13], "problem": [1, 3, 4, 5, 6, 9, 10, 13, 15], "y": [1, 3, 4, 8, 9, 10, 11, 13, 14, 15], "n_featur": [1, 3, 4, 9, 10, 13], "n_inform": [1, 3, 4, 9, 10, 13], "shuffl": [1, 3, 4, 9, 10, 13], "x_test": [1, 3, 4, 5, 9, 13], "y_test": [1, 3, 4, 5, 9, 13], "test_siz": [1, 3, 4, 9, 13], "empir": [1, 5, 7, 15, 16], "margin": [1, 3, 5, 7, 9, 12, 13, 15], "averag": [1, 3, 5, 7, 9, 13, 15], "width": [1, 5, 7, 9, 13, 15], "regression_mean_coverag": [1, 5, 7, 13], "regression_sharp": [1, 5, 7, 13], "print": [1, 3, 5, 9, 13], "f": [1, 2, 3, 5, 9, 11, 13, 15], "round": [1, 3, 5, 9, 13], "figur": [1, 5, 10], "band": 1, "sort_x": 1, "loc": [1, 2, 5, 10], "upper": [1, 2, 4, 7, 10, 12, 13, 15], "left": [1, 2, 5, 15], "aim": [1, 15], "expos": [1, 11], "standard": [1, 5, 11], "interfac": [1, 8, 11, 12], "guarante": [1, 5, 6, 15], "framework": [1, 2, 15], "have": [1, 2, 4, 15], "take": [1, 2, 8, 9, 12, 13], "collect": [1, 2, 4, 5, 6, 16], "ndarrai": [1, 2, 4, 7, 9, 10, 11, 12, 13, 16], "tensor": 1, "addit": [1, 5, 9, 10, 15, 16], "e": [1, 3, 11, 15], "g": [1, 3, 11, 15], "batch": [1, 11, 13], "copi": [1, 11], "ha": [1, 3, 4, 5, 8, 12, 15, 16], "deepcopi": [1, 11], "flag": [1, 11], "inform": [1, 5, 11, 15], "alreadi": [1, 2, 4, 5, 14], "compil": [1, 5, 11], "keyword": [1, 10, 11], "conceptu": 1, "similar": [1, 11], "reli": [1, 15], "lower": [1, 2, 4, 5, 7, 8, 10, 12, 13, 15], "cqr": [1, 8, 12, 13], "note": [1, 3, 4, 5, 12, 15], "coupl": [1, 8, 11], "where": [1, 8, 11, 12, 15], "first": [1, 2, 10, 15], "resp": [1, 8, 11], "second": [1, 10, 11], "axi": [1, 9, 10, 16], "associ": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 15, 16], "specif": [1, 11, 15], "subclass": [1, 3, 11], "one": [1, 2, 5, 13, 14, 15], "absolut": [1, 2, 7, 8, 11, 15], "former": 1, "These": 1, "three": [1, 4, 5], "cover": [1, 5, 6, 7, 15], "plenti": 1, "But": [1, 11], "you": [1, 5, 11], "special": 1, "even": 1, "creat": [1, 3, 5, 9, 10, 13], "scratch": [1, 2], "here": [1, 4, 5, 11, 14], "situat": 1, "your": 1, "own": 1, "classif": [1, 2, 6, 11], "randomforestclassifi": [1, 3], "rap": [1, 3, 5, 8, 12], "classifi": [1, 3, 5, 11, 15], "requir": [1, 4, 11, 15, 16], "probabl": [1, 3, 8, 12, 15], "onli": [1, 3, 5, 11], "most": [1, 3, 8, 12, 15], "rf": [1, 3, 13], "rf_model": [1, 3, 9, 11, 13], "n_estim": [1, 3, 9, 11, 13], "100": [1, 3, 5, 9, 10, 11, 13], "its": [1, 3], "logit": [1, 3, 8, 12], "make": [1, 3, 5], "sure": [1, 3], "over": [1, 3, 11, 15], "becaus": [1, 3, 4, 5], "enough": [1, 3], "softmax": [1, 3, 5, 11, 15], "rfpredictor": [1, 3], "predict_proba": [1, 3], "newli": [1, 3], "rf_predictor": [1, 3, 13], "structur": [1, 2, 5, 14], "At": [1, 15], "decid": [1, 2], "Then": [1, 15], "mean": [1, 2, 7, 8, 11, 13, 15], "deviat": [1, 2, 5, 8, 11, 15], "enabl": [1, 4, 9, 11, 13], "constant": [1, 12, 15], "mad": [1, 2, 4, 8], "them": [1, 15], "motiv": 1, "criteria": 1, "avail": 1, "resourc": 1, "qualiti": 1, "abund": 1, "disjoint": [1, 2], "d_": [1, 5, 15], "scarc": 1, "prefer": 1, "consum": 1, "agnost": [1, 15], "datafram": 1, "equal": [1, 16], "identifi": [1, 3, 8, 12], "leav": [1, 13, 15], "out": [1, 5, 13, 15], "additionnali": [1, 10], "obtain": [1, 2, 5, 15], "asign": 1, "core": 2, "weight_func": [2, 9, 13], "callabl": [2, 4, 8, 9, 12, 13], "featur": [2, 3, 4, 5, 9, 11, 13, 14, 16], "weight": [2, 3, 4, 8, 9, 12, 13, 16], "notimplementederror": [2, 11], "weight_method": 2, "suitabl": 2, "consid": [2, 5, 8, 11, 12, 16], "pretrain": [2, 4], "hat": [2, 8, 11], "x_": [2, 11, 15], "y_": [2, 7, 8, 11, 12, 15], "pred": [2, 8, 12], "befor": [2, 4, 5], "how": [2, 11, 14, 15], "valu": [2, 7, 10, 11, 12, 15, 16], "reimplement": 2, "nonconformity_funct": 2, "fix": 2, "around": [2, 5], "prediction_set_funct": 2, "scores_quantil": [2, 12], "y_lo": 2, "y_hi": 2, "abov": [2, 5, 15], "dummi": [2, 9, 10], "y_pred_calib": 2, "rand": [2, 3, 8, 12], "y_true_calib": 2, "y_pred_test": 2, "bound": [2, 4, 7, 8, 10, 12, 13, 15], "risk": [2, 4], "y_pred_high": 2, "static": [2, 4], "barber_weight": 2, "infer": [2, 3, 9, 13, 15], "distribut": [2, 5, 15], "barber": [2, 15], "et": [2, 13], "al": [2, 13], "correct": [2, 4, 9, 15], "bonferroni": [2, 4, 9], "max": [2, 4, 7, 8, 9, 15], "miscoverag": [2, 3, 4, 7, 9, 13], "all": [2, 5, 10, 15, 16], "equiprob": 2, "multipl": [2, 4, 9], "hypothesi": [2, 4, 9], "multivari": [2, 4, 9], "tupl": [2, 3, 4, 7, 9, 10, 11, 12, 13, 14], "valueerror": [2, 9, 12, 16], "fail": [2, 15], "check": [2, 5, 11, 16], "compute_quantil": 2, "store": [2, 13, 15], "get_nonconformity_scor": [2, 4, 9, 13], "getter": [2, 4], "get_norm_weight": 2, "set_norm_weight": 2, "norm_weight": 2, "setter": 2, "kfold_calibr": 2, "meta": 2, "combin": [2, 4, 11, 15], "cv": [2, 4, 9, 13], "kfold_calibrators_dict": 2, "priorli": 2, "kfold_predictors_dict": 2, "dictionnari": [2, 4, 5], "been": [2, 15], "did": 2, "is_conform": 2, "anomali": [2, 6], "detect": [2, 6, 7, 8], "follow": [2, 4, 5, 9, 11, 13, 15], "lof": 2, "neighbor": 2, "localoutlierfactor": 2, "fit_set": 2, "calib_set": 2, "train_siz": 2, "new_sampl": 2, "200": 2, "n_neighbor": 2, "35": 2, "novelti": 2, "ncf": 2, "lambda": [2, 3, 5, 8, 9, 12, 13], "set_nonconformity_scor": 2, "instead": 2, "lambd": [3, 5, 8, 12], "k_reg": [3, 8, 12], "regular": [3, 5, 8, 12], "adapt": [3, 13], "hyperparamet": [3, 8, 12], "k_": [3, 5, 8, 12], "reg": [3, 5, 8, 12], "encourag": [3, 5, 8, 12], "small": [3, 8, 12, 15], "posit": [3, 7, 8, 12], "term": [3, 5, 8, 12], "ap": [3, 5, 8, 12], "rank": [3, 8, 12, 15], "order": [3, 8, 12, 15, 16], "descend": [3, 8, 12], "start": [3, 5, 8, 12, 15], "appli": [3, 5, 8, 12], "fourth": [3, 8, 12], "extra": [3, 8, 12], "penalti": [3, 8, 12], "turn": [3, 5, 8, 11, 12], "off": [3, 5, 8, 11, 12], "One": [3, 5, 15], "consequ": 3, "avoid": 3, "empti": [3, 13], "make_classif": 3, "classification_mean_coverag": [3, 5, 7], "classification_mean_s": [3, 5, 7], "tensorflow": [3, 5, 11], "to_categor": [3, 5, 11], "n_class": 3, "x_fit": [3, 5, 9, 13, 14], "x_calib": [3, 5, 9, 13, 14], "y_fit": [3, 5, 9, 13, 14], "y_calib": [3, 5, 9, 13, 14], "hot": [3, 5], "encod": [3, 5], "y_fit_cat": [3, 5], "y_calib_cat": [3, 5], "y_test_cat": [3, 5], "initi": [3, 5, 8, 9, 12, 13], "raps_cp": 3, "set_pr": [3, 5, 7], "compos": [3, 5, 11, 13], "aps_cp": [3, 5], "conformalpredictor": 4, "splitter": [4, 14], "directli": [4, 11], "str": [4, 9, 10, 11], "handl": 4, "attribut": 4, "except": [4, 15], "dure": [4, 5, 11, 15], "compon": 4, "previous": [4, 9, 11, 13], "our": [4, 5, 11, 15], "choic": 4, "yield": [4, 11, 15], "besid": [4, 11], "aggreg": [4, 9, 13], "so": [4, 11, 15], "use_cach": [4, 9, 13], "oper": 4, "separ": 4, "thereaft": 4, "add": [4, 9, 11, 13], "pool": [4, 5, 9, 13], "option": [4, 10, 11], "inconsist": [4, 16], "between": [4, 5, 7, 9], "statu": 4, "dictionari": 4, "index": [4, 5], "get_weight": 4, "load": [4, 5], "path": [4, 10], "file": [4, 10], "correction_func": [4, 9], "y_higher": [4, 9, 13], "pred_set": 4, "union": [4, 16], "save": [4, 5], "serial": 4, "write": 4, "int": [4, 9, 13, 14, 16], "number": [4, 5, 7, 13, 14], "_predictor": 4, "_calibr": 4, "append_calibr": 4, "kei": 4, "kfold": [4, 13, 14], "append": 4, "append_predictor": 4, "get": [4, 9, 13, 15], "residu": [4, 5, 13, 15], "variabl": [4, 5, 15], "simpl": [5, 11], "evalu": 5, "uncertainti": [5, 6], "contain": [5, 11, 15], "about": 5, "442": 5, "patient": 5, "goal": 5, "physiolog": 5, "quantit": 5, "measur": [5, 15], "diseas": 5, "progress": 5, "year": 5, "There": 5, "ten": 5, "correspond": [5, 10, 11, 16], "ag": 5, "sex": 5, "bodi": 5, "mass": [5, 8, 12, 15], "blood": 5, "pressur": 5, "six": 5, "serum": 5, "offici": 5, "document": 5, "diabetes_x": 5, "diabetes_i": 5, "load_diabet": 5, "return_x_i": 5, "shape": [5, 7, 11], "captur": 5, "link": [5, 15], "evolut": 5, "bmi": 5, "newaxi": 5, "indep": 5, "ident": [5, 14], "d": [5, 6, 15], "great": 5, "fullfil": 5, "prerequisit": 5, "next": 5, "step": [5, 15], "splite": 5, "cal": [5, 11], "rigor": [5, 6, 15], "probabilist": [5, 15], "hold": [5, 15], "aforement": 5, "lin_reg_model": 5, "possibl": [5, 15], "xgboost": 5, "support": 5, "checkout": 5, "earlier": 5, "lin_reg_predictor": 5, "throught": 5, "splitcp": [5, 13], "present": [5, 15], "instanci": 5, "time": [5, 15], "split_cp": [5, 13], "95": [5, 15], "211": 5, "38": 5, "tool": 5, "visual": 5, "observ": [5, 7, 15], "tackl": 5, "classic": 5, "handwritten": 5, "digit": 5, "larg": 5, "28": 5, "imag": [5, 10, 15], "As": [5, 15], "process": [5, 15], "post": [5, 15], "applic": [5, 15], "preprocess": 5, "databas": 5, "load_data": 5, "reshap": 5, "len": [5, 10], "astyp": 5, "float32": 5, "255": 5, "50000": 5, "convnet": 5, "layer": [5, 11], "set_se": 5, "convolut": 5, "dens": [5, 11], "nn_model": 5, "sequenti": [5, 11], "input": [5, 11, 15], "conv2d": 5, "16": 5, "kernel_s": 5, "activ": [5, 11], "relu": [5, 11], "maxpooling2d": 5, "pool_siz": 5, "32": [5, 11, 15], "flatten": [5, 16], "is_train": [5, 11, 13], "config": 5, "gather": 5, "compile_kwarg": [5, 11], "optim": [5, 11], "adam": [5, 15], "loss": [5, 11, 13], "categorical_crossentropi": [5, 11], "accuraci": 5, "class_predictor": 5, "hyparamet": 5, "smaller": 5, "To": [5, 8, 11, 12, 15], "gentli": 5, "simpli": [5, 15], "fit_kwarg": 5, "epoch": [5, 11], "batch_siz": [5, 11], "256": 5, "validation_split": 5, "verbos": [5, 11], "18": 5, "imshow": 5, "titl": 5, "argmax": 5, "n": [5, 7, 11, 15, 16], "mean_coverag": 5, "mean_siz": 5, "2f": 5, "03": 5, "across": 5, "plane": 5, "among": 5, "some": [5, 15, 16], "stand": 5, "significantli": 5, "crescent": 5, "cluster": 5, "subsequ": 5, "remain": 5, "specifi": [5, 11], "synthet": 5, "consist": [5, 11, 16], "popular": 5, "easi": 5, "well": [5, 15], "5000": 5, "300": 5, "n_new": 5, "350": 5, "section": 5, "ad_model": 5, "similarili": 5, "70": 5, "30": [5, 13], "now": 5, "cad_result": 5, "cad_anomali": 5, "cad_not_anomali": 5, "compar": 5, "after": [5, 15], "if_result": 5, "if_not_anomali": 5, "if_anomali": 5, "fig": [5, 10], "ax": [5, 10], "subplot": [5, 10], "ncol": 5, "figsiz": [5, 10], "12": 5, "sharex": 5, "sharei": 5, "set_xtick": 5, "set_ytick": 5, "set_titl": 5, "clear": 5, "reduc": [5, 15], "alarm": 5, "p": [6, 15], "redict": 6, "un": 6, "certainti": 6, "c": [6, 7, 8, 12, 15], "alibr": 6, "onform": 6, "open": 6, "sourc": [6, 15], "python": 6, "integr": 6, "state": 6, "art": 6, "relat": 6, "techniqu": 6, "under": 6, "exchang": [6, 15], "within": [6, 15], "quickstart": 6, "th": [7, 11, 15, 16], "x_i": [7, 11, 15], "cov": 7, "With": [7, 15], "sum_": [7, 15], "indic": [7, 15], "correctli": 7, "object_detection_mean_area": [7, 9], "calcul": 7, "area": 7, "box": [7, 8, 9, 10, 12, 15], "object_detection_mean_coverag": [7, 9], "y_pred_out": 7, "being": [7, 15], "insid": 7, "outer": [7, 12], "regression_ac": 7, "compt": 7, "ac": 7, "distanc": 7, "nomin": 7, "strictli": 7, "neg": 7, "undercov": [7, 15], "magin": 7, "conserv": 7, "text": [8, 12, 15], "typeerror": [8, 12], "unsupport": [8, 11, 12], "q_": [8, 12], "lo": [8, 12, 15], "hi": [8, 12, 15], "higher": [8, 15], "elementwis": 8, "coordinatewis": 8, "signatur": [8, 12], "incompat": [8, 12], "properli": [8, 12], "p_": [8, 12, 15], "_1": [8, 11, 12], "_n": [8, 12], "_i": [8, 12], "smooth": [8, 12], "discret": [8, 12], "jump": [8, 12], "includ": [8, 12, 15], "builder": [8, 12], "initialit": [8, 12], "scale": [8, 10, 12, 15], "condit": [8, 11, 13, 15, 16], "mu_": [8, 12], "sigma_": [8, 12], "frac": [8, 15], "_2": [8, 11], "x_1": 8, "y_1": 8, "x_2": 8, "y_2": 8, "delta": 8, "coordin": [8, 10, 12, 16], "local": [9, 13], "object_detect": 9, "splitboxwis": 9, "wise": 9, "info": 9, "chose": 9, "randomforestregressor": [9, 11, 13], "n_target": 9, "format": [9, 10, 11], "x1": 9, "y1": [9, 11], "x2": 9, "y2": [9, 11], "min": 9, "od_cp": 9, "box_inn": 9, "box_out": 9, "average_area": 9, "nonconfom": [9, 13], "draw_bounding_box": 10, "image_path": 10, "show": 10, "draw": 10, "x_min": 10, "y_min": 10, "x_max": 10, "y_max": 10, "pil": 10, "should": 10, "outlin": 10, "displai": 10, "fig_kw": 10, "whose": 10, "also": [10, 11, 15], "absciss": 10, "vector": [10, 16], "updat": [10, 13], "120": 10, "best": [10, 15], "y_pred_lower1": 10, "15": 10, "y_pred_upper1": 10, "y_pred_lower2": 10, "y_pred_upper2": 10, "grid": 10, "nrow": 10, "boolean": 11, "pre": 11, "skip": 11, "sin": 11, "tree": 11, "rf_model1": 11, "rf_model2": 11, "predictor1": 11, "predictor2": 11, "don": 11, "retrain": 11, "No": 11, "do": [11, 15], "y_pred1": 11, "y_pred2": 11, "tf": 11, "expand_dim": 11, "els": 11, "cl_model": 11, "intern": [11, 15], "categor": [11, 15], "crossentropi": 11, "rmsprop": 11, "128": 11, "either": [11, 15], "clone": 11, "unsupervis": 11, "compile_arg": 11, "joint": [11, 15], "f_1": 11, "f_2": 11, "tensorflow_addon": 11, "tfa": 11, "q_model": 11, "pinball_loss": 11, "pinballloss": 11, "tau": 11, "9": 11, "sgd": 11, "regressor": [11, 13], "tf_predictor": 11, "wherea": 11, "m": [11, 15], "matrix": 11, "dictarg": 11, "exist": [11, 14, 15], "without": 11, "modif": 11, "predict_with_model": 11, "mu": [11, 13], "dispers": [11, 13, 15], "sigma": [11, 13, 15], "leftarrow": 11, "param": [11, 12], "mu_model": [11, 13], "sigma_model": [11, 13], "random_se": 11, "select": 11, "mean_var_predictor": [11, 13], "choos": [11, 15], "see": 11, "center": [12, 15], "gamma_": 12, "incorrect": 12, "inner": 12, "cdot": [12, 15, 16], "locallyadaptivecp": 13, "must": [13, 16], "emb": 13, "varianc": 13, "lacp": 13, "gradientboostingregressor": 13, "regressor_q_low": 13, "250": 13, "regressor_q_hi": 13, "crq": 13, "plu": 13, "control": [13, 14], "cv_cp": 13, "scheme": [13, 15], "bag": 13, "per": 13, "enbpi": 13, "b": 13, "agg_func_loo": 13, "bootstrap": 13, "func": 13, "loo": [13, 15], "determin": 13, "xu": [13, 15], "v1": 13, "arg": 13, "v2": 13, "oob": 13, "season": 13, "onlin": 13, "necessari": 13, "sequenc": [13, 15], "pi": 13, "adaptiveenbpi": 13, "version": [13, 15], "mean_model": 13, "aenbpi": 13, "helper": 14, "abstract": 14, "__call__": 14, "Not": 14, "just": 14, "placehold": 14, "interoper": 14, "determinist": 14, "ratio": 14, "iterabl": 14, "machin": 15, "right": 15, "approach": 15, "access": 15, "via": 15, "despit": 15, "effort": 15, "encount": 15, "could": 15, "stem": 15, "caus": 15, "typic": 15, "aleator": 15, "known": 15, "statist": 15, "irreduc": 15, "due": 15, "intrins": 15, "phenomenon": 15, "epistem": 15, "systemat": 15, "better": 15, "depend": 15, "field": 15, "major": 15, "impact": 15, "safeti": 15, "free": 15, "non": 15, "asymptot": 15, "y_i": 15, "_": 15, "mathbb": 15, "xy": 15, "big": 15, "geq": 15, "mani": 15, "frequenc": 15, "least": 15, "inequ": 15, "finit": 15, "noteworthi": 15, "therefor": 15, "condition": 15, "region": 15, "space": 15, "act": 15, "attain": 15, "black": 15, "common": 15, "literatur": 15, "angelopoulo": 15, "bate": 15, "angelopoulos2022": 15, "hand": 15, "introduct": 15, "awesom": 15, "github": 15, "ressourc": 15, "n_": 15, "sim": 15, "papadopoulos2002": 15, "lei2018": 15, "widehat": 15, "summar": 15, "pick": 15, "bar": 15, "r_i": 15, "dot": 15, "cardin": 15, "delta_": 15, "hereaft": 15, "papadopoulos2008": 15, "usual": 15, "again": 15, "heteroskedasc": 15, "improv": 15, "price": 15, "cost": 15, "extend": 15, "q": [15, 16], "alpha_": 15, "would": 15, "evenli": 15, "name": 15, "romano2019": 15, "misspecifi": 15, "bad": 15, "approxim": 15, "were": 15, "strong": 15, "theoret": 15, "properti": 15, "inherit": 15, "accur": 15, "shown": 15, "partit": 15, "principl": 15, "barber2021": 15, "introduc": 15, "jp": 15, "dedic": 15, "goe": 15, "disjointli": 15, "s_1": 15, "s_2": 15, "s_k": 15, "belong": 15, "s_": 15, "memori": 15, "wa": 15, "those": 15, "l": 15, "lfloor": 15, "rfloor": 15, "smallest": 15, "u": 15, "lceil": 15, "rceil": 15, "xu2021": 15, "tbc": 15, "categori": 15, "practic": 15, "subject": 15, "formal": 15, "latter": [], "written": 15, "toler": 15, "argu": 15, "come": 15, "notat": 15, "briefli": 15, "discuss": 15, "why": 15, "wai": 15, "reliabl": 15, "issu": 15, "pi_1": 15, "pi_2": 15, "pi_k": 15, "pi_": 15, "sort": 15, "decreas": 15, "j": 15, "quantifi": 15, "unknown": 15, "accord": 15, "ideal": 15, "good": 15, "grasp": 15, "pi_i": 15, "precis": 15, "straightforward": 15, "invovl": 15, "up": 15, "culum": 15, "exce": 15, "desir": 15, "confid": 15, "ge": 15, "realiti": 15, "often": 15, "poorli": 15, "lead": 15, "overconfid": 15, "underconfid": 15, "rigous": 15, "achiev": [], "address": 15, "research": 15, "commun": 15, "broader": 15, "romano2020": 15, "angelopoulos2021": 15, "degrancey2022": 15, "jordan": 15, "malik": 15, "2021": 15, "proceed": 15, "iclr": 15, "http": 15, "openreview": 15, "net": 15, "forum": 15, "id": 15, "endiu_dbm9": 15, "gentl": 15, "arxiv": 15, "preprint": 15, "2107": 15, "07511": 15, "org": 15, "cand": 15, "ramda": 15, "tibshirani": 15, "ann": 15, "49": 15, "486": 15, "507": 15, "februari": 15, "1905": 15, "02928": 15, "lei": 15, "sell": 15, "rinaldo": 15, "wasserman": 15, "2018": 15, "journal": 15, "american": 15, "113": 15, "523": 15, "pp": 15, "1094": 15, "1111": 15, "1604": 15, "04173": 15, "papadopoulo": 15, "h": 15, "proedrou": 15, "vovk": 15, "v": 15, "gammerman": 15, "2002": 15, "ecml": 15, "springer": 15, "com": 15, "chapter": 15, "1007": 15, "540": 15, "36755": 15, "1_29": 15, "2008": 15, "iast": 15, "confer": 15, "artifici": 15, "intellig": 15, "aia": 15, "64": 15, "69": 15, "de": 15, "grancei": 15, "alecu": 15, "gerchinovitz": 15, "mamalet": 15, "vigouroux": 15, "2022": 15, "june": 15, "secur": 15, "romano": 15, "patterson": 15, "2019": 15, "neurip": 15, "03222": 15, "sesia": 15, "2020": 15, "33": 15, "2006": 15, "02544": 15, "xie": 15, "dynam": 15, "seri": 15, "icml": 15, "mlr": 15, "press": 15, "v139": 15, "xu21h": 15, "html": 15, "complement_check": 16, "inflat": 16, "factor": 16, "deriv": 16, "impli": 16, "complementari": 16, "jk": 16, "feature_axi": 16, "columnwis": 16, "element": 16, "along": 16, "multidim": 16}, "objects": {"": [[2, 0, 0, "-", "calibration"], [4, 0, 0, "-", "conformalization"], [7, 0, 0, "-", "metrics"], [8, 0, 0, "-", "nonconformity_scores"], [10, 0, 0, "-", "plotting"], [11, 0, 0, "-", "prediction"], [12, 0, 0, "-", "prediction_sets"]], "calibration": [[2, 1, 1, "", "BaseCalibrator"], [2, 1, 1, "", "CvPlusCalibrator"], [2, 1, 1, "", "ScoreCalibrator"]], "calibration.BaseCalibrator": [[2, 2, 1, "", "barber_weights"], [2, 2, 1, "", "calibrate"], [2, 2, 1, "", "compute_quantile"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "get_norm_weights"], [2, 2, 1, "", "set_norm_weights"]], "calibration.CvPlusCalibrator": [[2, 2, 1, "", "calibrate"], [2, 2, 1, "", "fit"]], "calibration.ScoreCalibrator": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "is_conformal"], [2, 2, 1, "", "set_nonconformity_scores"]], "conformalization": [[4, 1, 1, "", "ConformalPredictor"], [4, 1, 1, "", "CrossValCpAggregator"]], "conformalization.ConformalPredictor": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "load"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "save"]], "conformalization.CrossValCpAggregator": [[4, 2, 1, "", "append_calibrator"], [4, 2, 1, "", "append_predictor"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "predict"]], "deel.puncc.anomaly_detection": [[0, 1, 1, "", "SplitCAD"]], "deel.puncc.anomaly_detection.SplitCAD": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"]], "deel.puncc.api.utils": [[16, 3, 1, "", "alpha_calib_check"], [16, 3, 1, "", "quantile"]], "deel.puncc.classification": [[3, 1, 1, "", "APS"], [3, 1, 1, "", "RAPS"]], "deel.puncc.classification.APS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.classification.RAPS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.object_detection": [[9, 1, 1, "", "SplitBoxWise"]], "deel.puncc.object_detection.SplitBoxWise": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "get_nonconformity_scores"], [9, 2, 1, "", "predict"]], "deel.puncc.regression": [[13, 1, 1, "", "AdaptiveEnbPI"], [13, 1, 1, "", "CQR"], [13, 1, 1, "", "CVPlus"], [13, 1, 1, "", "EnbPI"], [13, 1, 1, "", "LocallyAdaptiveCP"], [13, 1, 1, "", "SplitCP"]], "deel.puncc.regression.AdaptiveEnbPI": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"]], "deel.puncc.regression.CQR": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "get_nonconformity_scores"], [13, 2, 1, "", "predict"]], "deel.puncc.regression.CVPlus": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "get_nonconformity_scores"], [13, 2, 1, "", "predict"]], "deel.puncc.regression.EnbPI": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "predict"]], "deel.puncc.regression.LocallyAdaptiveCP": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "get_nonconformity_scores"], [13, 2, 1, "", "predict"]], "deel.puncc.regression.SplitCP": [[13, 2, 1, "", "fit"], [13, 2, 1, "", "get_nonconformity_scores"], [13, 2, 1, "", "predict"]], "metrics": [[7, 3, 1, "", "classification_mean_coverage"], [7, 3, 1, "", "classification_mean_size"], [7, 3, 1, "", "object_detection_mean_area"], [7, 3, 1, "", "object_detection_mean_coverage"], [7, 3, 1, "", "regression_ace"], [7, 3, 1, "", "regression_mean_coverage"], [7, 3, 1, "", "regression_sharpness"]], "nonconformity_scores": [[8, 3, 1, "", "absolute_difference"], [8, 3, 1, "", "cqr_score"], [8, 3, 1, "", "difference"], [8, 3, 1, "", "raps_score"], [8, 3, 1, "", "raps_score_builder"], [8, 3, 1, "", "scaled_ad"], [8, 3, 1, "", "scaled_bbox_difference"]], "plotting": [[10, 3, 1, "", "draw_bounding_box"], [10, 3, 1, "", "plot_prediction_intervals"]], "prediction": [[11, 1, 1, "", "BasePredictor"], [11, 1, 1, "", "DualPredictor"], [11, 1, 1, "", "IdPredictor"], [11, 1, 1, "", "MeanVarPredictor"]], "prediction.BasePredictor": [[11, 2, 1, "", "copy"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"]], "prediction.DualPredictor": [[11, 2, 1, "", "copy"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"]], "prediction.IdPredictor": [[11, 2, 1, "", "copy"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "predict_with_model"]], "prediction.MeanVarPredictor": [[11, 2, 1, "", "copy"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"]], "prediction_sets": [[12, 3, 1, "", "constant_bbox"], [12, 3, 1, "", "constant_interval"], [12, 3, 1, "", "cqr_interval"], [12, 3, 1, "", "raps_set"], [12, 3, 1, "", "raps_set_builder"], [12, 3, 1, "", "scaled_bbox"], [12, 3, 1, "", "scaled_interval"]], "splitting": [[14, 1, 1, "", "BaseSplitter"], [14, 1, 1, "", "IdSplitter"], [14, 1, 1, "", "KFoldSplitter"], [14, 1, 1, "", "RandomSplitter"]], "splitting.IdSplitter": [[14, 2, 1, "", "__call__"]], "splitting.KFoldSplitter": [[14, 2, 1, "", "__call__"]], "splitting.RandomSplitter": [[14, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"anomali": [0, 5, 15], "detect": [0, 5, 9, 15], "api": 1, "tabl": [1, 5], "content": [1, 5, 6], "": [1, 6], "modul": 1, "overview": [1, 15], "conformalpredictor": 1, "predictor": 1, "calibr": [1, 2], "splitter": 1, "classif": [3, 5, 15], "conform": [4, 5, 15], "quickstart": 5, "regress": [5, 13, 15], "diabet": 5, "dataset": 5, "predict": [5, 11, 12, 15], "model": 5, "mnist": 5, "two": 5, "moon": 5, "welcom": 6, "puncc": 6, "document": 6, "metric": 7, "nonconform": 8, "score": 8, "object": [9, 15], "plot": 10, "set": [12, 15], "split": [14, 15], "theori": 15, "uncertainti": 15, "quantif": 15, "induct": 15, "local": 15, "adapt": 15, "quantil": 15, "cqr": 15, "cross": 15, "valid": 15, "cv": 15, "jackknif": 15, "ensembl": 15, "batch": 15, "interv": 15, "enbpi": 15, "ap": 15, "regular": 15, "rap": 15, "refer": 15, "util": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"\ud83d\udea9 Anomaly detection": [[0, "anomaly-detection"]], "\ud83d\udcbb API": [[1, "api"]], "Table of Contents": [[1, "table-of-contents"], [5, "table-of-contents"]], "API\u2019s Modules": [[1, "api-s-modules"]], "Overview": [[1, "overview"]], "ConformalPredictor": [[1, "conformalpredictor"]], "Predictor": [[1, "predictor"]], "Calibrator": [[1, "calibrator"]], "Splitter": [[1, "splitter"]], "Calibration": [[2, "calibration"]], "\ud83d\udcca Classification": [[3, "classification"]], "Conformalization": [[4, "module-conformalization"]], "\ud83d\ude80 Quickstart": [[5, "quickstart"]], "\ud83d\udcc8 Conformal Regression": [[5, "conformal-regression"]], "\ud83d\udcbe Diabetes Dataset": [[5, "diabetes-dataset"]], "\ud83d\udd2e Prediction model": [[5, "prediction-model"]], "\u2699\ufe0f Conformal prediction": [[5, "conformal-prediction"], [5, "id2"]], "\ud83d\udcca Conformal Classification": [[5, "conformal-classification"]], "\ud83d\udcbe MNIST Dataset": [[5, "mnist-dataset"]], "\ud83d\udd2e Prediction Model": [[5, "id1"]], "\ud83d\udea9 Conformal Anomaly Detection": [[5, "conformal-anomaly-detection"]], "\ud83d\udcbe Two moons Dataset": [[5, "two-moons-dataset"]], "\ud83d\udd2e Anomaly detection model": [[5, "anomaly-detection-model"]], "\u2699\ufe0f Conformal Anomaly Detection": [[5, "id3"]], "Welcome to puncc\u2019s documentation!": [[6, "welcome-to-puncc-s-documentation"]], "Contents": [[6, null]], "\ud83d\udccf Metrics": [[7, "module-metrics"]], "Nonconformity scores": [[8, "module-nonconformity_scores"]], "\ud83d\uddbc\ufe0f Object Detection": [[9, "object-detection"]], "\ud83d\uddbc\ufe0f Plotting": [[10, "module-plotting"]], "Prediction": [[11, "prediction"]], "Prediction sets": [[12, "module-prediction_sets"]], "\ud83d\udcc8 Regression": [[13, "regression"]], "Splitting": [[14, "splitting"]], "\ud83d\udcc8 Theory overview": [[15, "theory-overview"]], "Uncertainty Quantification": [[15, "uncertainty-quantification"]], "Conformal Prediction": [[15, "conformal-prediction"]], "Conformal Regression": [[15, "conformal-regression"]], "Split (inductive) Conformal": [[15, "split-inductive-conformal"]], "Locally Adaptive Conformal Regression": [[15, "locally-adaptive-conformal-regression"]], "Conformalized Quantile Regression (CQR)": [[15, "conformalized-quantile-regression-cqr"]], "Cross-validation+ (CV+), Jackknife+": [[15, "cross-validation-cv-jackknife"]], "Ensemble Batch Prediction Intervals (EnbPI)": [[15, "ensemble-batch-prediction-intervals-enbpi"]], "Conformal Classification": [[15, "conformal-classification"]], "Adaptive Prediction Sets (APS)": [[15, "adaptive-prediction-sets-aps"]], "Regularized Adaptive Prediction Sets (RAPS)": [[15, "regularized-adaptive-prediction-sets-raps"]], "Conformal Anomaly Detection": [[15, "conformal-anomaly-detection"]], "Conformal Object Detection": [[15, "conformal-object-detection"]], "References": [[15, "references"]], "Utils": [[16, "utils"]]}, "indexentries": {"splitcad (class in deel.puncc.anomaly_detection)": [[0, "deel.puncc.anomaly_detection.SplitCAD"]], "fit() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.fit"]], "predict() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.predict"]], "basecalibrator (class in calibration)": [[2, "calibration.BaseCalibrator"]], "cvpluscalibrator (class in calibration)": [[2, "calibration.CvPlusCalibrator"]], "scorecalibrator (class in calibration)": [[2, "calibration.ScoreCalibrator"]], "barber_weights() (calibration.basecalibrator static method)": [[2, "calibration.BaseCalibrator.barber_weights"]], "calibrate() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.calibrate"]], "calibrate() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.calibrate"]], "calibration": [[2, "module-calibration"]], "compute_quantile() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.compute_quantile"]], "fit() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.fit"]], "fit() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.fit"]], "fit() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.fit"]], "get_nonconformity_scores() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_nonconformity_scores"]], "get_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.get_nonconformity_scores"]], "get_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_norm_weights"]], "is_conformal() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.is_conformal"]], "module": [[2, "module-calibration"], [4, "module-conformalization"], [7, "module-metrics"], [8, "module-nonconformity_scores"], [10, "module-plotting"], [11, "module-prediction"], [12, "module-prediction_sets"]], "set_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.set_nonconformity_scores"]], "set_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.set_norm_weights"]], "aps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.APS"]], "raps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.RAPS"]], "fit() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.fit"]], "fit() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.fit"]], "predict() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.predict"]], "predict() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.predict"]], "conformalpredictor (class in conformalization)": [[4, "conformalization.ConformalPredictor"]], "crossvalcpaggregator (class in conformalization)": [[4, "conformalization.CrossValCpAggregator"]], "append_calibrator() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_calibrator"]], "append_predictor() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_predictor"]], "conformalization": [[4, "module-conformalization"]], "fit() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.fit"]], "get_nonconformity_scores() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_nonconformity_scores"]], "get_nonconformity_scores() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_nonconformity_scores"]], "get_weights() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_weights"]], "get_weights() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_weights"]], "load() (conformalization.conformalpredictor static method)": [[4, "conformalization.ConformalPredictor.load"]], "predict() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.predict"]], "predict() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.predict"]], "save() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.save"]], "classification_mean_coverage() (in module metrics)": [[7, "metrics.classification_mean_coverage"]], "classification_mean_size() (in module metrics)": [[7, "metrics.classification_mean_size"]], "metrics": [[7, "module-metrics"]], "object_detection_mean_area() (in module metrics)": [[7, "metrics.object_detection_mean_area"]], "object_detection_mean_coverage() (in module metrics)": [[7, "metrics.object_detection_mean_coverage"]], "regression_ace() (in module metrics)": [[7, "metrics.regression_ace"]], "regression_mean_coverage() (in module metrics)": [[7, "metrics.regression_mean_coverage"]], "regression_sharpness() (in module metrics)": [[7, "metrics.regression_sharpness"]], "absolute_difference() (in module nonconformity_scores)": [[8, "nonconformity_scores.absolute_difference"]], "cqr_score() (in module nonconformity_scores)": [[8, "nonconformity_scores.cqr_score"]], "difference() (in module nonconformity_scores)": [[8, "nonconformity_scores.difference"]], "nonconformity_scores": [[8, "module-nonconformity_scores"]], "raps_score() (in module nonconformity_scores)": [[8, "nonconformity_scores.raps_score"]], "raps_score_builder() (in module nonconformity_scores)": [[8, "nonconformity_scores.raps_score_builder"]], "scaled_ad() (in module nonconformity_scores)": [[8, "nonconformity_scores.scaled_ad"]], "scaled_bbox_difference() (in module nonconformity_scores)": [[8, "nonconformity_scores.scaled_bbox_difference"]], "splitboxwise (class in deel.puncc.object_detection)": [[9, "deel.puncc.object_detection.SplitBoxWise"]], "fit() (deel.puncc.object_detection.splitboxwise method)": [[9, "deel.puncc.object_detection.SplitBoxWise.fit"]], "get_nonconformity_scores() (deel.puncc.object_detection.splitboxwise method)": [[9, "deel.puncc.object_detection.SplitBoxWise.get_nonconformity_scores"]], "predict() (deel.puncc.object_detection.splitboxwise method)": [[9, "deel.puncc.object_detection.SplitBoxWise.predict"]], "draw_bounding_box() (in module plotting)": [[10, "plotting.draw_bounding_box"]], "plot_prediction_intervals() (in module plotting)": [[10, "plotting.plot_prediction_intervals"]], "plotting": [[10, "module-plotting"]], "basepredictor (class in prediction)": [[11, "prediction.BasePredictor"]], "dualpredictor (class in prediction)": [[11, "prediction.DualPredictor"]], "idpredictor (class in prediction)": [[11, "prediction.IdPredictor"]], "meanvarpredictor (class in prediction)": [[11, "prediction.MeanVarPredictor"]], "copy() (prediction.basepredictor method)": [[11, "prediction.BasePredictor.copy"]], "copy() (prediction.dualpredictor method)": [[11, "prediction.DualPredictor.copy"]], "copy() (prediction.idpredictor method)": [[11, "prediction.IdPredictor.copy"]], "copy() (prediction.meanvarpredictor method)": [[11, "prediction.MeanVarPredictor.copy"]], "fit() (prediction.basepredictor method)": [[11, "prediction.BasePredictor.fit"]], "fit() (prediction.dualpredictor method)": [[11, "prediction.DualPredictor.fit"]], "fit() (prediction.idpredictor method)": [[11, "prediction.IdPredictor.fit"]], "fit() (prediction.meanvarpredictor method)": [[11, "prediction.MeanVarPredictor.fit"]], "predict() (prediction.basepredictor method)": [[11, "prediction.BasePredictor.predict"]], "predict() (prediction.dualpredictor method)": [[11, "prediction.DualPredictor.predict"]], "predict() (prediction.idpredictor method)": [[11, "prediction.IdPredictor.predict"]], "predict() (prediction.meanvarpredictor method)": [[11, "prediction.MeanVarPredictor.predict"]], "predict_with_model() (prediction.idpredictor method)": [[11, "prediction.IdPredictor.predict_with_model"]], "prediction": [[11, "module-prediction"]], "constant_bbox() (in module prediction_sets)": [[12, "prediction_sets.constant_bbox"]], "constant_interval() (in module prediction_sets)": [[12, "prediction_sets.constant_interval"]], "cqr_interval() (in module prediction_sets)": [[12, "prediction_sets.cqr_interval"]], "prediction_sets": [[12, "module-prediction_sets"]], "raps_set() (in module prediction_sets)": [[12, "prediction_sets.raps_set"]], "raps_set_builder() (in module prediction_sets)": [[12, "prediction_sets.raps_set_builder"]], "scaled_bbox() (in module prediction_sets)": [[12, "prediction_sets.scaled_bbox"]], "scaled_interval() (in module prediction_sets)": [[12, "prediction_sets.scaled_interval"]], "adaptiveenbpi (class in deel.puncc.regression)": [[13, "deel.puncc.regression.AdaptiveEnbPI"]], "cqr (class in deel.puncc.regression)": [[13, "deel.puncc.regression.CQR"]], "cvplus (class in deel.puncc.regression)": [[13, "deel.puncc.regression.CVPlus"]], "enbpi (class in deel.puncc.regression)": [[13, "deel.puncc.regression.EnbPI"]], "locallyadaptivecp (class in deel.puncc.regression)": [[13, "deel.puncc.regression.LocallyAdaptiveCP"]], "splitcp (class in deel.puncc.regression)": [[13, "deel.puncc.regression.SplitCP"]], "fit() (deel.puncc.regression.adaptiveenbpi method)": [[13, "deel.puncc.regression.AdaptiveEnbPI.fit"]], "fit() (deel.puncc.regression.cqr method)": [[13, "deel.puncc.regression.CQR.fit"]], "fit() (deel.puncc.regression.cvplus method)": [[13, "deel.puncc.regression.CVPlus.fit"]], "fit() (deel.puncc.regression.enbpi method)": [[13, "deel.puncc.regression.EnbPI.fit"]], "fit() (deel.puncc.regression.locallyadaptivecp method)": [[13, "deel.puncc.regression.LocallyAdaptiveCP.fit"]], "fit() (deel.puncc.regression.splitcp method)": [[13, "deel.puncc.regression.SplitCP.fit"]], "get_nonconformity_scores() (deel.puncc.regression.cqr method)": [[13, "deel.puncc.regression.CQR.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.cvplus method)": [[13, "deel.puncc.regression.CVPlus.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.locallyadaptivecp method)": [[13, "deel.puncc.regression.LocallyAdaptiveCP.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.splitcp method)": [[13, "deel.puncc.regression.SplitCP.get_nonconformity_scores"]], "predict() (deel.puncc.regression.adaptiveenbpi method)": [[13, "deel.puncc.regression.AdaptiveEnbPI.predict"]], "predict() (deel.puncc.regression.cqr method)": [[13, "deel.puncc.regression.CQR.predict"]], "predict() (deel.puncc.regression.cvplus method)": [[13, "deel.puncc.regression.CVPlus.predict"]], "predict() (deel.puncc.regression.enbpi method)": [[13, "deel.puncc.regression.EnbPI.predict"]], "predict() (deel.puncc.regression.locallyadaptivecp method)": [[13, "deel.puncc.regression.LocallyAdaptiveCP.predict"]], "predict() (deel.puncc.regression.splitcp method)": [[13, "deel.puncc.regression.SplitCP.predict"]], "basesplitter (class in splitting)": [[14, "splitting.BaseSplitter"]], "idsplitter (class in splitting)": [[14, "splitting.IdSplitter"]], "kfoldsplitter (class in splitting)": [[14, "splitting.KFoldSplitter"]], "randomsplitter (class in splitting)": [[14, "splitting.RandomSplitter"]], "__call__() (splitting.idsplitter method)": [[14, "splitting.IdSplitter.__call__"]], "__call__() (splitting.kfoldsplitter method)": [[14, "splitting.KFoldSplitter.__call__"]], "__call__() (splitting.randomsplitter method)": [[14, "splitting.RandomSplitter.__call__"]], "alpha_calib_check() (in module deel.puncc.api.utils)": [[16, "deel.puncc.api.utils.alpha_calib_check"]], "quantile() (in module deel.puncc.api.utils)": [[16, "deel.puncc.api.utils.quantile"]]}})