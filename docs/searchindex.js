Search.setIndex({"docnames": ["anomaly_detection", "api", "calibration", "classification", "conformalization", "experimental", "getting_started", "index", "metrics", "nonconformity_scores", "object_detection", "plotting", "prediction", "prediction_sets", "regression", "splitting", "theory_overview", "utils"], "filenames": ["anomaly_detection.rst", "api.rst", "calibration.rst", "classification.rst", "conformalization.rst", "experimental.rst", "getting_started.rst", "index.rst", "metrics.rst", "nonconformity_scores.rst", "object_detection.rst", "plotting.rst", "prediction.rst", "prediction_sets.rst", "regression.rst", "splitting.rst", "theory_overview.rst", "utils.rst"], "titles": ["\ud83d\udea9 Anomaly detection", "\ud83d\udcbb API", "Calibration", "\ud83d\udcca Classification", "Conformalization", "Experimental", "\ud83d\ude80 Quickstart", "Welcome to puncc\u2019s documentation!", "\ud83d\udccf Metrics", "Nonconformity scores", "\ud83d\uddbc\ufe0f Object Detection", "\ud83d\uddbc\ufe0f Plotting", "Prediction", "Prediction sets", "\ud83d\udcc8 Regression", "Splitting", "\ud83d\udcc8 Theory overview", "Utils"], "terms": {"current": [0, 3, 4, 10, 14], "implement": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 15, 16], "conform": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14], "detector": [0, 6, 16], "ar": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17], "list": [0, 1, 3, 10, 12, 14, 15, 16], "thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17], "page": [0, 3, 6, 10, 14, 16], "each": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16], "wrapper": [0, 1, 3, 5, 6, 10, 12, 14], "calibr": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 17], "decis": [0, 2], "threshold": [0, 2, 6, 16, 17], "pass": [0, 1, 2, 3, 4, 10, 11, 12, 14, 16], "argument": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 14], "object": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14], "constructor": [0, 1, 2, 3, 5, 6, 10, 12, 14], "Such": [0, 1, 2, 3, 6, 14], "model": [0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 16], "need": [0, 1, 2, 3, 4, 5, 6, 12, 14, 15, 16], "fit": [0, 1, 2, 3, 4, 5, 6, 10, 12, 14, 15, 16], "predict": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 17], "method": [0, 1, 2, 3, 4, 5, 6, 10, 12, 14, 16, 17], "modul": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14], "from": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17], "api": [0, 2, 3, 4, 6, 7, 9, 12, 13, 14, 17], "ensur": [0, 3, 6, 14, 16], "complianc": [0, 1, 3, 14], "variou": [0, 3, 6, 14, 16], "ml": [0, 1, 3, 6, 12, 14, 16], "dl": [0, 1, 3, 6, 14], "librari": [0, 3, 6, 7, 14], "kera": [0, 1, 3, 6, 12, 14], "scikit": [0, 3, 6, 14], "learn": [0, 3, 6, 14, 16], "puncc": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17], "class": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17], "deel": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 17], "anomaly_detect": [0, 6], "splitcad": [0, 6], "predictor": [0, 2, 3, 4, 5, 6, 10, 12, 14, 16], "train": [0, 1, 2, 3, 4, 5, 6, 10, 12, 14, 15, 16], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "random_st": [0, 1, 2, 3, 4, 6, 10, 11, 12, 14, 15], "none": [0, 2, 3, 4, 10, 11, 12, 14, 15, 17], "split": [0, 1, 2, 3, 4, 6, 10, 14], "base": [0, 1, 2, 4, 5, 12, 14, 16, 17], "laxhammar": [0, 16], "": [0, 2, 3, 4, 6, 8, 10, 12, 14, 16], "algorithm": [0, 2, 3, 6, 7, 12, 16, 17], "The": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 17], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "through": [0, 6, 16], "underli": [0, 1, 4, 5, 6, 12, 14, 16], "score": [0, 1, 2, 3, 4, 6, 10, 12, 13, 14, 16], "For": [0, 1, 3, 6, 8, 9, 10, 12, 13, 14, 16], "more": [0, 1, 2, 3, 6, 10, 12, 14, 16], "detail": [0, 3, 6, 12, 14], "we": [0, 1, 2, 3, 6, 10, 12, 14, 16, 17], "refer": [0, 3, 10, 14], "user": [0, 1, 2, 3, 6, 7, 10, 14, 16], "theori": [0, 3, 7, 10, 14], "overview": [0, 3, 7, 10, 14], "paramet": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "basepredictor": [0, 1, 3, 4, 6, 10, 12, 14], "bool": [0, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 17], "fals": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 14, 16, 17], "re": [0, 4, 10, 14], "default": [0, 2, 3, 4, 5, 6, 10, 12, 14, 17], "float": [0, 2, 3, 4, 8, 9, 10, 13, 14, 15, 17], "random": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16], "seed": [0, 1, 3, 10, 11, 14, 15], "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16], "when": [0, 1, 2, 3, 9, 10, 12, 13, 14, 16, 17], "doe": [0, 1, 3, 10, 14, 16], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "custom": [0, 1, 3, 4, 10, 14], "exampl": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17], "import": [0, 1, 2, 3, 4, 6, 10, 11, 12, 14, 17], "numpi": [0, 2, 3, 6, 8, 10, 11, 12, 14, 17], "np": [0, 1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 14, 17], "sklearn": [0, 1, 2, 3, 4, 6, 10, 11, 12, 14], "ensembl": [0, 1, 3, 4, 6, 10, 12, 14], "isolationforest": [0, 6], "dataset": [0, 1, 2, 3, 4, 10, 11, 12, 14, 16, 17], "make_moon": [0, 2, 6], "matplotlib": [0, 2, 6, 11], "pyplot": [0, 2, 6, 11], "plt": [0, 2, 6, 11], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16], "two": [0, 1, 2, 8, 9, 11, 12, 13, 14, 16], "moon": [0, 2], "4": [0, 1, 2, 3, 4, 6, 8, 10, 12, 14, 16, 17], "n_sampl": [0, 1, 2, 3, 4, 6, 10, 11, 14], "1000": [0, 1, 2, 3, 4, 10, 12, 14], "nois": [0, 2, 6, 11], "0": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17], "05": [0, 2, 6, 16], "arrai": [0, 2, 6, 8, 10, 12, 14, 15, 17], "5": [0, 2, 6, 12, 17], "25": [0, 2, 6], "uniformli": [0, 6], "new": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16], "test": [0, 1, 2, 3, 4, 6, 10, 12, 14, 16], "data": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16], "point": [0, 1, 2, 4, 6, 9, 11, 12, 14, 15, 16], "rng": [0, 2, 6], "randomst": [0, 2, 6], "42": [0, 1, 2, 4, 6], "z_test": [0, 6], "uniform": [0, 2, 6, 12], "low": [0, 1, 2, 6], "6": [0, 1, 2, 6], "high": [0, 2, 6], "size": [0, 1, 2, 3, 6, 8, 9, 11, 13, 16, 17], "150": 0, "2": [0, 1, 2, 3, 4, 6, 10, 11, 12, 14, 16, 17], "nonconform": [0, 1, 2, 3, 4, 6, 10, 12, 13, 14, 16], "defin": [0, 1, 2, 3, 6, 7, 8, 10, 12, 14, 15, 16], "IF": [0, 6], "By": [0, 2, 6, 16, 17], "score_sampl": [0, 2, 6], "return": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17], "opposit": [0, 2, 6], "redefin": [0, 1, 3, 6], "output": [0, 1, 5, 6, 7, 11, 12, 16], "adpredictor": [0, 6], "def": [0, 1, 2, 3, 6, 12], "self": [0, 1, 3, 6], "x": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16], "instanti": [0, 2, 4, 6, 12], "isol": [0, 6], "forest": [0, 1, 3, 6, 10, 12, 14], "wrap": [0, 1, 3, 4, 6, 12, 14, 15], "if_predictor": [0, 6], "cad": [0, 2, 6], "top": [0, 6], "if_cad": [0, 6], "proper": [0, 2, 6, 16], "sampl": [0, 1, 2, 3, 4, 6, 10, 14, 15, 16, 17], "randomli": [0, 1, 3, 6, 10, 12, 14], "ration": [0, 6], "7": [0, 6], "3": [0, 3, 6, 9, 12, 13, 16], "respect": [0, 1, 2, 3, 5, 6, 10, 12, 14], "z": [0, 2, 6], "fit_ratio": [0, 3, 6, 10, 14], "set": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 17], "maximum": [0, 2, 3, 6, 10, 14, 16], "rate": [0, 2, 6, 16], "1": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "alpha": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17], "01": [0, 2], "call": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16], "which": [0, 1, 2, 3, 6, 9, 12, 13, 16, 17], "anomal": [0, 2, 6, 16], "result": [0, 2, 6], "not_anomali": [0, 2], "invert": [0, 2, 6], "plot": [0, 1, 2, 6, 7, 12], "scatter": [0, 2, 6], "10": [0, 1, 2, 4, 6, 11, 12, 16, 17], "label": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17], "inlier": [0, 2, 6], "marker": [0, 2, 6], "color": [0, 2, 6, 11], "red": [0, 2, 6, 11], "40": [0, 2, 6], "blue": [0, 2, 6], "normal": [0, 2, 4, 6, 9, 11, 16], "xtick": [0, 2], "ytick": [0, 2], "legend": [0, 2, 6, 11], "8": [0, 2, 3, 10, 14], "z_fit": 0, "z_calib": 0, "kwarg": [0, 1, 3, 4, 5, 10, 12, 14], "comput": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 17], "If": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17], "calib": [0, 1, 2, 3, 6, 10, 14, 16], "subset": [0, 1, 2, 3, 6, 10, 14, 15], "w": [0, 1, 2, 3, 4, 6, 10, 14, 16, 17], "r": [0, 1, 2, 3, 4, 6, 9, 10, 14, 16], "t": [0, 1, 2, 3, 4, 6, 10, 12, 14, 16], "In": [0, 1, 2, 3, 6, 10, 12, 14, 16], "case": [0, 1, 2, 3, 4, 10, 14, 16], "perform": [0, 3, 10, 14, 16, 17], "given": [0, 1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16], "ignor": [0, 3, 6, 10, 11, 14], "ani": [0, 1, 3, 4, 5, 7, 10, 12, 14, 16], "iter": [0, 1, 2, 3, 4, 9, 10, 12, 13, 14, 15, 17], "proport": [0, 3, 8, 10, 13, 14], "assign": [0, 1, 2, 3, 10, 14, 15, 16, 17], "dict": [0, 2, 3, 4, 10, 12, 14], "configur": [0, 1, 3, 4, 5, 10, 11, 12, 14], "rais": [0, 2, 3, 4, 9, 10, 12, 13, 14, 17], "runtimeerror": [0, 2, 3, 4, 10, 12, 14], "whether": [0, 6, 11], "an": [0, 1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17], "taken": 0, "target": [0, 1, 2, 3, 4, 6, 8, 10, 12, 14, 16, 17], "fdr": [0, 6], "outlier": [0, 6, 16], "tag": 0, "otherwis": [0, 1, 2, 3, 8, 11, 16], "type": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "level": [1, 2, 3, 4, 8, 10, 12, 14, 16], "offer": [1, 2], "flexibl": 1, "let": [1, 6, 16], "sai": 1, "want": [1, 2, 6, 12], "neural": [1, 3], "network": [1, 3], "interv": [1, 2, 4, 6, 8, 10, 11, 12, 13, 14, 17], "estim": [1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 16, 17], "cross": [1, 14], "valid": [1, 14, 17], "plan": 1, "experi": [1, 16], "differ": [1, 4, 6, 9, 16], "other": [1, 6, 16], "can": [1, 2, 4, 6, 7, 12, 16], "fulli": 1, "construct": [1, 2, 6, 16], "propos": 1, "paradigm": 1, "It": [1, 6, 7, 16, 17], "boil": [1, 16], "down": [1, 16], "assembl": 1, "A": [1, 12, 14, 15, 16, 17], "strategi": [1, 4, 15], "induct": [1, 6], "cp": [1, 3, 6, 10, 12, 14, 16], "crossvalcpaggreg": [1, 4], "dualpredictor": [1, 4, 12, 14], "idpredictor": [1, 12], "meanvarpredictor": [1, 12, 14], "experiment": 1, "torchpredictor": [1, 5], "basecalibr": [1, 2, 4, 9, 13], "cvpluscalibr": [1, 2], "scorecalibr": [1, 2], "basesplitt": [1, 4, 15], "idsplitt": [1, 15], "randomsplitt": [1, 15], "kfoldsplitt": [1, 4, 15], "util": [1, 3, 6, 12], "alpha_calib_check": [1, 17], "quantil": [1, 2, 9, 12, 13, 14, 17], "hungarian_assign": [1, 17], "absolute_differ": [1, 9], "cqr_score": [1, 9], "lac_scor": [1, 9], "raps_scor": [1, 9], "raps_score_build": [1, 9], "scaled_ad": [1, 9], "scaled_bbox_differ": [1, 9], "constant_bbox": [1, 13], "constant_interv": [1, 4, 13], "cqr_interv": [1, 13], "lac_set": [1, 13], "raps_set": [1, 13], "raps_set_build": [1, 13], "scaled_bbox": [1, 13], "scaled_interv": [1, 13], "canva": [1, 4], "procedur": [1, 3, 4, 6, 10, 14, 16], "instanc": [1, 4, 8, 12, 16], "explain": 1, "later": [1, 6], "linear_model": [1, 4, 6, 12], "regress": [1, 2, 3, 4, 7, 10, 11, 12], "linear": [1, 4, 6, 17], "linearregress": [1, 4, 6, 12], "definit": [1, 2, 4], "my_predictor": 1, "built": [1, 4, 13], "build": [1, 3, 4, 9, 12, 13, 16], "function": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17], "altern": 1, "sever": [1, 6, 8, 16], "readi": [1, 2], "nonconf": 1, "nonconformity_scor": [1, 2, 4, 9], "my_ncf": 1, "y_pred": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14], "y_true": [1, 2, 8, 9, 11, 14], "ab": [1, 2, 10, 16], "prediction_set": [1, 2, 4, 13], "my_psf": 1, "nonconf_scores_quantil": 1, "y_lower": [1, 2, 4, 10, 14], "y_upper": [1, 2, 4], "my_calibr": 1, "nonconf_score_func": [1, 2, 4], "pred_set_func": [1, 2, 4], "k": [1, 2, 4, 14, 15, 16], "fold": [1, 2, 4, 14, 15, 16], "produc": [1, 2, 4, 6, 16], "20": [1, 3, 4, 10, 11, 12, 14, 17], "kfold_splitt": [1, 4], "conformal_predictor": [1, 4], "accordingli": [1, 4], "x_train": [1, 3, 4, 6, 12], "y_train": [1, 3, 4, 6, 12], "full": 1, "And": 1, "y_pred_low": [1, 2, 6, 8, 11, 12, 14], "y_pred_upp": [1, 6, 8, 11, 12, 14], "chosen": [1, 6], "error": [1, 2, 7, 8, 16], "signific": [1, 2, 3, 4, 8, 10, 12, 14, 16], "coverag": [1, 3, 6, 8, 10, 12, 14, 16], "90": [1, 6, 12], "x_new": [1, 12], "code": [1, 6, 12], "snippet": [1, 12], "previou": [1, 16], "cvplu": [1, 14], "like": [1, 3, 4, 9, 13, 16], "below": [1, 2, 6, 12, 16], "make_regress": [1, 4, 10, 11, 14], "model_select": [1, 2, 3, 4, 10, 14], "train_test_split": [1, 2, 3, 4, 10, 14], "plot_prediction_interv": [1, 11, 12], "metric": [1, 3, 6, 7, 10, 12, 14], "problem": [1, 3, 4, 6, 7, 10, 11, 14, 16], "y": [1, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16], "n_featur": [1, 3, 4, 10, 11, 14], "n_inform": [1, 3, 4, 10, 11, 14], "shuffl": [1, 3, 4, 10, 11, 12, 14], "x_test": [1, 3, 4, 6, 10, 12, 14], "y_test": [1, 3, 4, 6, 10, 12, 14], "test_siz": [1, 3, 4, 10, 14], "empir": [1, 6, 8, 16, 17], "margin": [1, 3, 6, 8, 10, 12, 13, 14, 16], "averag": [1, 3, 6, 8, 10, 12, 14, 16], "width": [1, 6, 8, 10, 12, 14, 16], "regression_mean_coverag": [1, 6, 8, 12, 14], "regression_sharp": [1, 6, 8, 12, 14], "print": [1, 3, 6, 10, 12, 14], "f": [1, 2, 3, 5, 6, 10, 12, 14, 16], "round": [1, 3, 6, 10, 12, 14], "figur": [1, 6, 11], "band": 1, "sort_x": 1, "loc": [1, 2, 6, 11], "upper": [1, 2, 4, 8, 11, 13, 14, 16], "left": [1, 2, 6, 16], "aim": [1, 16], "expos": [1, 5, 12], "standard": [1, 5, 6, 12], "interfac": [1, 5, 9, 12, 13], "guarante": [1, 6, 7, 16], "framework": [1, 2, 16], "have": [1, 2, 4, 16, 17], "take": [1, 2, 5, 9, 10, 13, 14], "collect": [1, 2, 4, 6, 7, 17], "ndarrai": [1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 17], "tensor": [1, 5], "addit": [1, 6, 10, 11, 16, 17], "e": [1, 3, 12, 16], "g": [1, 3, 12, 16], "batch": [1, 12, 14], "copi": [1, 5, 12], "ha": [1, 3, 4, 5, 6, 9, 13, 16, 17], "deepcopi": [1, 12], "flag": [1, 5, 12], "inform": [1, 5, 6, 12, 16], "alreadi": [1, 2, 4, 6, 15], "compil": [1, 5, 6, 12], "keyword": [1, 5, 11, 12], "conceptu": 1, "similar": [1, 12], "reli": [1, 16, 17], "lower": [1, 2, 4, 6, 8, 9, 11, 13, 14, 16], "cqr": [1, 9, 13, 14], "note": [1, 3, 4, 6, 13, 16], "coupl": [1, 9, 12], "where": [1, 9, 12, 13, 16, 17], "first": [1, 2, 11, 16], "resp": [1, 9, 12], "second": [1, 11, 12], "axi": [1, 10, 11, 17], "associ": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17], "specif": [1, 12, 16], "subclass": [1, 3, 12], "one": [1, 2, 6, 14, 15, 16], "absolut": [1, 2, 8, 9, 12, 16], "former": 1, "These": 1, "three": [1, 4, 6, 16], "cover": [1, 6, 7, 8, 16], "plenti": 1, "But": [1, 12], "you": [1, 6, 12], "special": 1, "even": [1, 16], "creat": [1, 3, 6, 10, 11, 14], "scratch": [1, 2], "here": [1, 4, 6, 12, 15, 16], "situat": 1, "your": 1, "own": 1, "classif": [1, 2, 7, 12], "randomforestclassifi": [1, 3], "rap": [1, 3, 6, 9, 13], "classifi": [1, 3, 6, 12], "requir": [1, 4, 12, 16, 17], "probabl": [1, 3, 9, 13, 16], "onli": [1, 3, 6, 12, 16], "most": [1, 3, 9, 13, 16], "rf": [1, 3, 14], "rf_model": [1, 3, 10, 12, 14], "n_estim": [1, 3, 10, 12, 14], "100": [1, 3, 6, 10, 11, 12, 14], "its": [1, 3, 16], "logit": [1, 3, 9, 13], "make": [1, 3, 6, 12, 16], "sure": [1, 3, 12], "over": [1, 3, 8, 12, 16], "becaus": [1, 3, 4, 6], "enough": [1, 3], "softmax": [1, 3, 6, 12, 16], "rfpredictor": [1, 3], "predict_proba": [1, 3], "newli": [1, 3], "rf_predictor": [1, 3, 14], "structur": [1, 2, 6, 15], "At": [1, 16], "decid": [1, 2], "Then": [1, 16], "mean": [1, 2, 8, 9, 12, 14, 16], "deviat": [1, 2, 6, 9, 12, 16], "enabl": [1, 3, 4, 5, 10, 12, 14], "constant": [1, 13, 16], "mad": [1, 2, 4, 9], "them": [1, 16], "motiv": 1, "criteria": 1, "avail": [1, 16], "resourc": 1, "qualiti": 1, "abund": 1, "disjoint": [1, 2], "d_": [1, 6, 16], "scarc": 1, "prefer": 1, "consum": 1, "agnost": [1, 16], "datafram": 1, "equal": [1, 17], "identifi": [1, 3, 9, 13, 16], "leav": [1, 14, 16], "out": [1, 6, 14, 16, 17], "additionnali": [1, 11], "obtain": [1, 2, 6, 12, 16], "asign": 1, "core": 2, "weight_func": [2, 10, 14], "callabl": [2, 4, 9, 10, 13, 14], "featur": [2, 3, 4, 5, 6, 10, 12, 14, 15, 16, 17], "weight": [2, 3, 4, 9, 10, 13, 14, 17], "notimplementederror": [2, 12], "weight_method": 2, "suitabl": 2, "consid": [2, 6, 9, 12, 13, 17], "pretrain": [2, 4, 12], "hat": [2, 5, 9, 12], "x_": [2, 12, 16], "y_": [2, 8, 9, 12, 13, 16], "pred": [2, 9, 13], "befor": [2, 4, 6], "how": [2, 12, 15], "valu": [2, 3, 8, 9, 11, 12, 13, 17], "reimplement": 2, "nonconformity_funct": 2, "fix": 2, "around": [2, 6], "prediction_set_funct": 2, "scores_quantil": [2, 13], "y_lo": 2, "y_hi": 2, "abov": [2, 6, 16], "dummi": [2, 10, 11], "y_pred_calib": 2, "rand": [2, 3, 9, 13], "y_true_calib": 2, "y_pred_test": 2, "bound": [2, 4, 8, 9, 11, 13, 14, 16, 17], "risk": [2, 4], "y_pred_high": 2, "static": [2, 4], "barber_weight": 2, "infer": [2, 3, 10, 12, 14, 16], "distribut": [2, 6, 16], "barber": [2, 16], "et": [2, 14], "al": [2, 14], "correct": [2, 4, 10, 16], "bonferroni": [2, 4, 10, 16], "max": [2, 4, 8, 9, 10, 16], "miscoverag": [2, 3, 4, 8, 10, 14], "all": [2, 6, 11, 16, 17], "equiprob": 2, "multipl": [2, 4, 10], "hypothesi": [2, 4, 10], "multivari": [2, 4, 10], "tupl": [2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 17], "valueerror": [2, 10, 13, 17], "fail": 2, "check": [2, 6, 12, 17], "compute_quantil": 2, "store": [2, 14, 16], "get_nonconformity_scor": [2, 3, 4, 10, 14], "getter": [2, 4], "get_norm_weight": 2, "set_norm_weight": 2, "norm_weight": 2, "setter": 2, "kfold_calibr": 2, "meta": 2, "combin": [2, 4, 12, 16], "cv": [2, 3, 4, 10, 14], "kfold_calibrators_dict": 2, "priorli": 2, "kfold_predictors_dict": 2, "dictionnari": [2, 4, 6], "been": [2, 16], "did": 2, "is_conform": 2, "anomali": [2, 7], "detect": [2, 7, 8, 9], "follow": [2, 3, 4, 6, 10, 12, 14, 16], "lof": 2, "neighbor": 2, "localoutlierfactor": 2, "fit_set": 2, "calib_set": 2, "train_siz": 2, "new_sampl": 2, "200": 2, "n_neighbor": 2, "35": 2, "novelti": 2, "ncf": 2, "lambda": [2, 3, 6, 9, 10, 13, 14, 16], "set_nonconformity_scor": 2, "instead": [2, 12, 16], "lac": [3, 9, 13], "least": 3, "ambigu": 3, "make_classif": 3, "classification_mean_coverag": [3, 6, 8], "classification_mean_s": [3, 6, 8], "tensorflow": [3, 6, 12], "to_categor": [3, 6, 12], "n_class": 3, "x_fit": [3, 6, 10, 14, 15], "x_calib": [3, 6, 10, 12, 14, 15], "y_fit": [3, 6, 10, 14, 15], "y_calib": [3, 6, 10, 12, 14, 15], "One": [3, 6], "hot": [3, 6], "encod": [3, 6], "y_fit_cat": [3, 6], "y_calib_cat": [3, 6], "y_test_cat": [3, 6], "initi": [3, 6, 9, 10, 12, 13, 14], "lac_cp": 3, "set_pr": [3, 6, 8], "use_cach": [3, 4, 10, 14], "add": [3, 4, 10, 12, 14], "previous": [3, 4, 10, 12, 14], "pool": [3, 4, 6, 10, 14], "aggreg": [3, 4, 10, 14, 16], "get": [3, 4, 10, 12, 14, 16], "nonconfom": [3, 10, 14], "compos": [3, 6, 12, 14], "lambd": [3, 6, 9, 13], "k_reg": [3, 9, 13], "regular": [3, 6, 9, 13], "adapt": [3, 14], "hyperparamet": [3, 9, 13, 16], "k_": [3, 6, 9, 13, 16], "reg": [3, 6, 9, 13, 16], "encourag": [3, 6, 9, 13], "small": [3, 9, 13, 16], "posit": [3, 8, 9, 13, 16], "term": [3, 6, 9, 13, 16], "ap": [3, 6, 9, 13], "rank": [3, 9, 13], "order": [3, 9, 13, 16, 17], "descend": [3, 9, 13], "start": [3, 6, 9, 13, 16], "appli": [3, 6, 9, 13, 16], "fourth": [3, 9, 13], "extra": [3, 9, 13], "penalti": [3, 9, 13], "turn": [3, 6, 9, 12, 13, 16], "off": [3, 6, 9, 12, 13], "consequ": 3, "avoid": [3, 9, 12, 13], "empti": [3, 14], "raps_cp": 3, "aps_cp": [3, 6], "conformalpredictor": 4, "splitter": [4, 15], "directli": [4, 12], "str": [4, 10, 11, 12], "handl": [4, 16], "attribut": 4, "except": [4, 16], "dure": [4, 5, 6, 12, 16], "compon": 4, "our": [4, 6, 12, 16], "choic": 4, "yield": [4, 12, 16], "besid": [4, 12], "so": [4, 12, 16], "oper": 4, "separ": [4, 16], "thereaft": 4, "option": [4, 11, 12], "inconsist": [4, 17], "between": [4, 5, 6, 8, 10, 16, 17], "statu": 4, "dictionari": 4, "index": [4, 6, 16], "get_weight": 4, "load": [4, 6], "path": [4, 11], "file": [4, 11], "correction_func": [4, 10], "y_higher": [4, 10, 14], "pred_set": 4, "union": [4, 8, 16, 17], "save": [4, 6], "save_data": 4, "serial": 4, "write": 4, "int": [4, 5, 10, 14, 15, 17], "number": [4, 5, 6, 8, 14, 15, 16, 17], "_predictor": 4, "_calibr": 4, "append_calibr": 4, "kei": 4, "kfold": [4, 14, 15], "append": 4, "append_predictor": 4, "residu": [4, 6, 14, 16], "variabl": [4, 6, 16], "cautious": 5, "is_train": [5, 6, 12, 14], "optim": [5, 6, 12, 16], "torch": 5, "adam": [5, 6, 16], "criterion": 5, "mseloss": 5, "compile_kwarg": [5, 6, 12], "boolean": [5, 12], "pre": [5, 12], "skip": [5, 12], "nn": 5, "loss": [5, 6, 12, 14], "measur": [5, 6, 16], "distanc": [5, 8], "both": [5, 12], "input_feat": 5, "output_feat": 5, "correspond": [5, 6, 11, 12, 16, 17], "channel": 5, "input": [5, 6, 12, 16], "simpl": [6, 12, 16], "evalu": 6, "uncertainti": [6, 7], "contain": [6, 12, 16, 17], "about": 6, "442": 6, "patient": 6, "goal": [6, 16], "physiolog": 6, "quantit": 6, "diseas": 6, "progress": 6, "year": 6, "There": [6, 16], "ten": 6, "ag": 6, "sex": 6, "bodi": 6, "mass": [6, 9, 13, 16], "blood": 6, "pressur": 6, "six": 6, "serum": 6, "offici": 6, "document": 6, "diabetes_x": 6, "diabetes_i": 6, "load_diabet": 6, "return_x_i": 6, "shape": [6, 8, 12, 17], "captur": 6, "link": [6, 16], "evolut": 6, "bmi": 6, "newaxi": 6, "indep": 6, "ident": [6, 15, 16], "d": [6, 7, 16], "great": 6, "fullfil": 6, "prerequisit": 6, "next": 6, "step": [6, 16], "splite": 6, "cal": [6, 12], "rigor": [6, 7, 16], "probabilist": [6, 16], "hold": [6, 16], "aforement": 6, "lin_reg_model": 6, "possibl": [6, 16], "xgboost": 6, "support": [6, 12], "checkout": 6, "earlier": 6, "lin_reg_predictor": 6, "throught": 6, "splitcp": [6, 12, 14], "present": [6, 16], "instanci": 6, "time": [6, 16], "split_cp": [6, 12, 14], "95": [6, 16], "211": 6, "38": 6, "tool": 6, "visual": 6, "observ": [6, 8, 16], "tackl": 6, "classic": 6, "handwritten": 6, "digit": 6, "larg": 6, "28": 6, "imag": [6, 11, 16], "As": [6, 16], "process": [6, 16], "post": [6, 16], "applic": [6, 16], "preprocess": 6, "databas": 6, "load_data": 6, "reshap": 6, "len": [6, 11, 12], "astyp": 6, "float32": 6, "255": 6, "50000": 6, "convnet": 6, "layer": [6, 12], "set_se": 6, "convolut": 6, "dens": [6, 12], "nn_model": 6, "sequenti": [6, 12, 16], "conv2d": 6, "16": 6, "kernel_s": 6, "activ": [6, 12], "relu": [6, 12], "maxpooling2d": 6, "pool_siz": 6, "32": [6, 12, 16], "flatten": [6, 17], "config": 6, "gather": 6, "categorical_crossentropi": [6, 12], "accuraci": 6, "class_predictor": 6, "hyparamet": 6, "smaller": [6, 16], "To": [6, 9, 12, 13, 16], "gentli": 6, "simpli": [6, 16], "fit_kwarg": 6, "epoch": [6, 12], "batch_siz": [6, 12], "256": 6, "validation_split": 6, "verbos": [6, 12], "18": 6, "imshow": 6, "titl": 6, "argmax": 6, "n": [6, 8, 12, 16, 17], "mean_coverag": 6, "mean_siz": 6, "2f": 6, "03": 6, "across": 6, "plane": 6, "among": 6, "some": [6, 16, 17], "stand": 6, "significantli": 6, "crescent": 6, "cluster": 6, "subsequ": 6, "remain": 6, "specifi": [6, 12], "synthet": 6, "consist": [6, 12, 17], "popular": 6, "easi": 6, "well": [6, 16], "5000": [6, 12], "300": 6, "n_new": 6, "350": 6, "section": 6, "ad_model": 6, "similarili": 6, "70": [6, 17], "30": [6, 14, 17], "now": 6, "cad_result": 6, "cad_anomali": 6, "cad_not_anomali": 6, "compar": 6, "after": [6, 16], "if_result": 6, "if_not_anomali": 6, "if_anomali": 6, "fig": [6, 11], "ax": [6, 11, 12], "subplot": [6, 11], "ncol": 6, "figsiz": [6, 11], "12": [6, 9, 13, 17], "sharex": 6, "sharei": 6, "set_xtick": 6, "set_ytick": 6, "set_titl": 6, "clear": 6, "reduc": [6, 16], "alarm": 6, "p": [7, 16], "redict": 7, "un": 7, "certainti": 7, "c": [7, 8, 9, 13, 16], "alibr": 7, "onform": 7, "open": 7, "sourc": [7, 16], "python": 7, "integr": 7, "state": 7, "art": 7, "relat": 7, "techniqu": 7, "under": [7, 16], "exchang": [7, 16], "within": [7, 16], "quickstart": 7, "th": [8, 12, 16, 17], "x_i": [8, 12, 16], "cov": 8, "With": [8, 16], "sum_": [8, 16], "indic": [8, 16], "correctli": 8, "iou": [8, 16, 17], "bboxes1": 8, "bboxes2": 8, "calcul": [8, 17], "intersect": [8, 16], "box": [8, 9, 10, 11, 13, 16, 17], "ratio": [8, 15], "area": 8, "repres": [8, 16], "coordin": [8, 9, 11, 13, 16, 17], "format": [8, 10, 11, 12], "x_min": [8, 11], "y_min": [8, 11], "x_max": [8, 11], "y_max": [8, 11], "pair": [8, 16], "object_detection_mean_area": [8, 10], "object_detection_mean_coverag": [8, 10], "y_pred_out": 8, "being": [8, 16], "insid": 8, "outer": [8, 13], "regression_ac": 8, "compt": 8, "ac": 8, "nomin": [8, 16], "strictli": 8, "neg": [8, 9], "undercov": [8, 16], "magin": 8, "conserv": 8, "text": [9, 13, 16], "typeerror": [9, 13], "unsupport": [9, 12, 13], "q_": [9, 13], "lo": [9, 13, 16], "hi": [9, 13, 16], "higher": [9, 16], "elementwis": 9, "coordinatewis": 9, "p_": [9, 13, 16], "_1": [9, 12, 13, 16], "_n": [9, 13], "_i": [9, 13, 16], "signatur": [9, 13], "incompat": [9, 13], "properli": [9, 13], "smooth": [9, 13], "discret": [9, 13], "jump": [9, 13], "includ": [9, 13], "builder": [9, 13], "initialit": [9, 13], "ep": [9, 13], "1e": [9, 13], "scale": [9, 11, 13, 16], "condit": [9, 12, 14, 16, 17], "mu_": [9, 13], "sigma_": [9, 13], "frac": [9, 16], "divis": 9, "zero": 9, "_2": [9, 12], "x_1": [9, 16], "y_1": 9, "x_2": 9, "y_2": 9, "delta": 9, "local": [10, 14], "object_detect": 10, "splitboxwis": 10, "wise": 10, "info": 10, "chose": 10, "randomforestregressor": [10, 12, 14], "n_target": 10, "x1": 10, "y1": [10, 12], "x2": 10, "y2": [10, 12], "min": [10, 16], "od_cp": 10, "box_inn": 10, "box_out": 10, "average_area": 10, "draw_bounding_box": 11, "image_path": 11, "show": 11, "draw": 11, "pil": 11, "should": 11, "outlin": 11, "displai": 11, "fig_kw": 11, "whose": 11, "also": [11, 12, 16, 17], "absciss": 11, "vector": [11, 16, 17], "updat": [11, 14, 16], "120": 11, "best": [11, 16], "y_pred_lower1": 11, "15": 11, "y_pred_upper1": 11, "y_pred_lower2": 11, "y_pred_upper2": 11, "grid": 11, "nrow": 11, "sin": 12, "tree": 12, "rf_model1": 12, "rf_model2": 12, "predictor1": 12, "predictor2": 12, "don": 12, "retrain": 12, "No": 12, "do": [12, 16, 17], "y_pred1": 12, "y_pred2": 12, "tf": 12, "expand_dim": 12, "els": 12, "cl_model": 12, "intern": [12, 16], "categor": [12, 16], "crossentropi": 12, "rmsprop": 12, "128": 12, "either": 12, "clone": 12, "unsupervis": [12, 16], "get_is_train": 12, "compile_arg": 12, "joint": [12, 16], "f_1": 12, "f_2": 12, "tensorflow_addon": 12, "tfa": 12, "q_model": 12, "pinball_loss": 12, "pinballloss": 12, "tau": 12, "9": 12, "sgd": 12, "regressor": [12, 14], "tf_predictor": 12, "wherea": 12, "m": [12, 16, 17], "matrix": [12, 17], "dictarg": 12, "exist": [12, 15, 16], "without": [12, 16], "modif": [12, 16], "linspac": 12, "4000": 12, "real": 12, "real_f": 12, "randn": 12, "suppos": 12, "api_cal": 12, "remot": 12, "still": 12, "serv": 12, "host": 12, "dummy_predictor": 12, "try": 12, "request": 12, "along": [12, 17], "predict_with_model": 12, "mu": [12, 14], "dispers": [12, 14, 16], "sigma": [12, 14, 16], "leftarrow": 12, "param": [12, 13], "mu_model": [12, 14], "sigma_model": [12, 14], "random_se": 12, "select": 12, "mean_var_predictor": [12, 14], "choos": [12, 16], "see": [12, 16], "center": [13, 16], "gamma_": 13, "incorrect": 13, "inner": 13, "cdot": [13, 16, 17], "singleton": 13, "locallyadaptivecp": 14, "must": [14, 17], "emb": 14, "varianc": 14, "lacp": 14, "gradientboostingregressor": 14, "regressor_q_low": 14, "250": 14, "regressor_q_hi": 14, "crq": 14, "plu": 14, "control": [14, 15, 16], "cv_cp": 14, "scheme": [14, 16], "bag": [14, 16], "per": 14, "enbpi": 14, "b": [14, 16], "agg_func_loo": 14, "bootstrap": [14, 16], "func": 14, "loo": [14, 16], "determin": 14, "xu": [14, 16], "v1": 14, "arg": 14, "v2": 14, "oob": 14, "season": 14, "onlin": 14, "necessari": [14, 17], "sequenc": [14, 16], "pi": [14, 16], "adaptiveenbpi": 14, "version": [14, 16], "mean_model": 14, "aenbpi": 14, "helper": 15, "abstract": 15, "__call__": 15, "Not": 15, "just": 15, "placehold": 15, "interoper": 15, "determinist": 15, "iterabl": 15, "machin": 16, "right": 16, "approach": 16, "access": 16, "via": 16, "despit": 16, "effort": 16, "encount": 16, "could": 16, "stem": 16, "caus": 16, "typic": 16, "aleator": 16, "known": [16, 17], "statist": 16, "irreduc": 16, "due": 16, "intrins": 16, "phenomenon": 16, "epistem": 16, "systemat": 16, "better": 16, "depend": 16, "field": 16, "major": 16, "impact": 16, "safeti": 16, "particularli": 16, "attract": 16, "free": 16, "regardless": 16, "work": 16, "black": 16, "non": 16, "asymptot": 16, "finit": 16, "assum": 16, "grow": 16, "infin": 16, "y_i": 16, "_": 16, "same": 16, "mathbb": 16, "xy": 16, "widehat": 16, "big": 16, "geq": 16, "mani": 16, "frequenc": 16, "usual": 16, "c_": 16, "inequ": 16, "minim": 16, "assumpt": 16, "dot": 16, "x_n": 16, "y_n": 16, "form": 16, "milder": 16, "than": [16, 17], "independ": 16, "noteworthi": 16, "therefor": 16, "achiev": 16, "condition": 16, "region": 16, "space": 16, "act": 16, "attain": 16, "common": 16, "literatur": 16, "angelopoulo": 16, "bate": 16, "angelopoulos2022": 16, "hand": 16, "introduct": 16, "awesom": 16, "github": 16, "ressourc": 16, "sim": 16, "papadopoulos2002": 16, "lei2018": 16, "lbrace": 16, "n_": 16, "rbrace": 16, "purpos": 16, "summar": 16, "pick": 16, "mathcal": 16, "r_i": 16, "delta_": 16, "hereaft": 16, "papadopoulos2008": 16, "again": 16, "heteroskedasc": 16, "improv": 16, "price": 16, "cost": 16, "extend": 16, "q": [16, 17], "alpha_": 16, "denot": 16, "would": 16, "evenli": 16, "name": 16, "romano2019": 16, "misspecifi": 16, "bad": 16, "approxim": 16, "were": 16, "strong": 16, "theoret": 16, "properti": 16, "inherit": 16, "accur": 16, "shown": 16, "partit": 16, "principl": 16, "barber2021": 16, "introduc": 16, "jp": 16, "dedic": 16, "goe": 16, "disjointli": 16, "s_1": 16, "s_2": 16, "s_k": 16, "belong": 16, "s_": 16, "memori": 16, "wa": 16, "those": 16, "bar": 16, "l": 16, "lfloor": 16, "rfloor": 16, "smallest": 16, "u": 16, "lceil": 16, "rceil": 16, "xu2021": 16, "seri": 16, "y_t": 16, "x_t": 16, "epsilon_t": 16, "necessarili": 16, "rbrace_": 16, "held": 16, "map": 16, "phi": 16, "individu": 16, "togeth": 16, "stage": 16, "s_b": 16, "replac": 16, "r_t": 16, "_t": 16, "emploi": 16, "everi": 16, "drop": 16, "last": 16, "ad": 16, "mod": 16, "neq": 16, "exact": 16, "howev": 16, "sadinle2018": 16, "_k": 16, "task": 16, "minu": 16, "sofmax": 16, "ground": 16, "truth": 16, "bay": 16, "tend": 16, "uncertain": 16, "overcov": 16, "confid": 16, "romano2020": 16, "stabl": 16, "arrang": 16, "decreas": 16, "largest": 16, "reach": 16, "weher": 16, "quad": 16, "angelopoulos2021": 16, "notat": 16, "thresholdn": 16, "leq": 16, "allow": 16, "laxhammar2015": 16, "likelihood": 16, "begin": 16, "end": 16, "normin": 16, "degrancey2022": 16, "wai": 16, "formul": 16, "boxwis": 16, "adjust": 16, "charecter": 16, "corner": 16, "four": 16, "tha": 16, "j": 16, "match": [16, 17], "hungarian": [16, 17], "maxim": [16, 17], "jordan": 16, "malik": 16, "2021": 16, "proceed": 16, "iclr": 16, "http": 16, "openreview": 16, "net": 16, "forum": 16, "id": 16, "endiu_dbm9": 16, "gentl": 16, "arxiv": 16, "preprint": 16, "2107": 16, "07511": 16, "org": 16, "cand": 16, "ramda": 16, "tibshirani": 16, "ann": 16, "49": 16, "486": 16, "507": 16, "februari": 16, "1905": 16, "02928": 16, "falkman": 16, "2015": 16, "sub": 16, "trajectori": 16, "annal": 16, "mathemat": 16, "artifici": 16, "intellig": 16, "74": 16, "67": 16, "94": 16, "lei": 16, "sell": 16, "rinaldo": 16, "wasserman": 16, "2018": 16, "journal": 16, "american": 16, "113": 16, "523": 16, "pp": 16, "1094": 16, "1111": 16, "1604": 16, "04173": 16, "papadopoulo": 16, "h": 16, "proedrou": 16, "vovk": 16, "v": 16, "gammerman": 16, "2002": 16, "ecml": 16, "springer": 16, "com": 16, "chapter": 16, "1007": 16, "540": 16, "36755": 16, "1_29": 16, "2008": 16, "iast": 16, "confer": 16, "aia": 16, "64": 16, "69": 16, "de": 16, "grancei": 16, "alecu": 16, "gerchinovitz": 16, "mamalet": 16, "vigouroux": 16, "2022": 16, "june": 16, "reliabl": 16, "secur": 16, "romano": 16, "patterson": 16, "2019": 16, "neurip": 16, "03222": 16, "sesia": 16, "2020": 16, "33": 16, "2006": 16, "02544": 16, "sandinl": 16, "114": 16, "525": 16, "223": 16, "234": 16, "1609": 16, "00451": 16, "xie": 16, "dynam": 16, "icml": 16, "mlr": 16, "press": 16, "v139": 16, "xu21h": 16, "html": 16, "complement_check": 17, "inflat": 17, "factor": 17, "deriv": 17, "impli": 17, "complementari": 17, "jk": 17, "feature_axi": 17, "columnwis": 17, "element": 17, "multidim": 17, "predicted_bbox": 17, "true_bbox": 17, "min_iou": 17, "ones": 17, "kuhn": 17, "munkr": 17, "minimum": 17, "align": 17, "greater": 17, "pad": 17, "sum": 17, "total": 17, "final": 17, "filter": 17, "meet": 17, "50": 17, "60": 17, "48": 17, "22": 17, "58": 17}, "objects": {"": [[2, 0, 0, "-", "calibration"], [4, 0, 0, "-", "conformalization"], [5, 0, 0, "-", "experimental"], [8, 0, 0, "-", "metrics"], [9, 0, 0, "-", "nonconformity_scores"], [11, 0, 0, "-", "plotting"], [12, 0, 0, "-", "prediction"], [13, 0, 0, "-", "prediction_sets"]], "calibration": [[2, 1, 1, "", "BaseCalibrator"], [2, 1, 1, "", "CvPlusCalibrator"], [2, 1, 1, "", "ScoreCalibrator"]], "calibration.BaseCalibrator": [[2, 2, 1, "", "barber_weights"], [2, 2, 1, "", "calibrate"], [2, 2, 1, "", "compute_quantile"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "get_norm_weights"], [2, 2, 1, "", "set_norm_weights"]], "calibration.CvPlusCalibrator": [[2, 2, 1, "", "calibrate"], [2, 2, 1, "", "fit"]], "calibration.ScoreCalibrator": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "is_conformal"], [2, 2, 1, "", "set_nonconformity_scores"]], "conformalization": [[4, 1, 1, "", "ConformalPredictor"], [4, 1, 1, "", "CrossValCpAggregator"]], "conformalization.ConformalPredictor": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "load"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "save"]], "conformalization.CrossValCpAggregator": [[4, 2, 1, "", "append_calibrator"], [4, 2, 1, "", "append_predictor"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "predict"]], "deel.puncc.anomaly_detection": [[0, 1, 1, "", "SplitCAD"]], "deel.puncc.anomaly_detection.SplitCAD": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"]], "deel.puncc.api.utils": [[17, 3, 1, "", "alpha_calib_check"], [17, 3, 1, "", "hungarian_assignment"], [17, 3, 1, "", "quantile"]], "deel.puncc.classification": [[3, 1, 1, "", "APS"], [3, 1, 1, "", "LAC"], [3, 1, 1, "", "RAPS"]], "deel.puncc.classification.APS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.classification.LAC": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_nonconformity_scores"], [3, 2, 1, "", "predict"]], "deel.puncc.classification.RAPS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.object_detection": [[10, 1, 1, "", "SplitBoxWise"]], "deel.puncc.object_detection.SplitBoxWise": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "get_nonconformity_scores"], [10, 2, 1, "", "predict"]], "deel.puncc.regression": [[14, 1, 1, "", "AdaptiveEnbPI"], [14, 1, 1, "", "CQR"], [14, 1, 1, "", "CVPlus"], [14, 1, 1, "", "EnbPI"], [14, 1, 1, "", "LocallyAdaptiveCP"], [14, 1, 1, "", "SplitCP"]], "deel.puncc.regression.AdaptiveEnbPI": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "predict"]], "deel.puncc.regression.CQR": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "get_nonconformity_scores"], [14, 2, 1, "", "predict"]], "deel.puncc.regression.CVPlus": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "get_nonconformity_scores"], [14, 2, 1, "", "predict"]], "deel.puncc.regression.EnbPI": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "predict"]], "deel.puncc.regression.LocallyAdaptiveCP": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "get_nonconformity_scores"], [14, 2, 1, "", "predict"]], "deel.puncc.regression.SplitCP": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "get_nonconformity_scores"], [14, 2, 1, "", "predict"]], "experimental": [[5, 1, 1, "", "TorchPredictor"]], "experimental.TorchPredictor": [[5, 2, 1, "", "copy"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"]], "metrics": [[8, 3, 1, "", "classification_mean_coverage"], [8, 3, 1, "", "classification_mean_size"], [8, 3, 1, "", "iou"], [8, 3, 1, "", "object_detection_mean_area"], [8, 3, 1, "", "object_detection_mean_coverage"], [8, 3, 1, "", "regression_ace"], [8, 3, 1, "", "regression_mean_coverage"], [8, 3, 1, "", "regression_sharpness"]], "nonconformity_scores": [[9, 3, 1, "", "absolute_difference"], [9, 3, 1, "", "cqr_score"], [9, 3, 1, "", "difference"], [9, 3, 1, "", "lac_score"], [9, 3, 1, "", "raps_score"], [9, 3, 1, "", "raps_score_builder"], [9, 3, 1, "", "scaled_ad"], [9, 3, 1, "", "scaled_bbox_difference"]], "plotting": [[11, 3, 1, "", "draw_bounding_box"], [11, 3, 1, "", "plot_prediction_intervals"]], "prediction": [[12, 1, 1, "", "BasePredictor"], [12, 1, 1, "", "DualPredictor"], [12, 1, 1, "", "IdPredictor"], [12, 1, 1, "", "MeanVarPredictor"]], "prediction.BasePredictor": [[12, 2, 1, "", "copy"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "get_is_trained"], [12, 2, 1, "", "predict"]], "prediction.DualPredictor": [[12, 2, 1, "", "copy"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "get_is_trained"], [12, 2, 1, "", "predict"]], "prediction.IdPredictor": [[12, 2, 1, "", "copy"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "get_is_trained"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "predict_with_model"]], "prediction.MeanVarPredictor": [[12, 2, 1, "", "copy"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "get_is_trained"], [12, 2, 1, "", "predict"]], "prediction_sets": [[13, 3, 1, "", "constant_bbox"], [13, 3, 1, "", "constant_interval"], [13, 3, 1, "", "cqr_interval"], [13, 3, 1, "", "lac_set"], [13, 3, 1, "", "raps_set"], [13, 3, 1, "", "raps_set_builder"], [13, 3, 1, "", "scaled_bbox"], [13, 3, 1, "", "scaled_interval"]], "splitting": [[15, 1, 1, "", "BaseSplitter"], [15, 1, 1, "", "IdSplitter"], [15, 1, 1, "", "KFoldSplitter"], [15, 1, 1, "", "RandomSplitter"]], "splitting.IdSplitter": [[15, 2, 1, "", "__call__"]], "splitting.KFoldSplitter": [[15, 2, 1, "", "__call__"]], "splitting.RandomSplitter": [[15, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"anomali": [0, 6, 16], "detect": [0, 6, 10, 16], "api": 1, "tabl": [1, 6], "content": [1, 6, 7], "": [1, 7], "modul": 1, "overview": [1, 16], "conformalpredictor": 1, "predictor": 1, "calibr": [1, 2], "splitter": 1, "classif": [3, 6, 16], "conform": [4, 6, 16], "experiment": 5, "quickstart": 6, "regress": [6, 14, 16], "diabet": 6, "dataset": 6, "predict": [6, 12, 13, 16], "model": 6, "mnist": 6, "two": 6, "moon": 6, "welcom": 7, "puncc": 7, "document": 7, "metric": 8, "nonconform": 9, "score": 9, "object": [10, 16], "plot": 11, "set": [13, 16], "split": [15, 16], "theori": 16, "uncertainti": 16, "quantif": 16, "induct": 16, "local": 16, "adapt": 16, "quantil": 16, "cqr": 16, "cross": 16, "valid": 16, "cv": 16, "jackknif": 16, "ensembl": 16, "batch": 16, "interv": 16, "enbpi": 16, "least": 16, "ambigu": 16, "valu": 16, "classifi": 16, "lac": 16, "ap": 16, "regular": 16, "rap": 16, "refer": 16, "util": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"\ud83d\udea9 Anomaly detection": [[0, "anomaly-detection"]], "\ud83d\udcbb API": [[1, "api"]], "Table of Contents": [[1, "table-of-contents"], [6, "table-of-contents"]], "API\u2019s Modules": [[1, "api-s-modules"]], "Overview": [[1, "overview"]], "ConformalPredictor": [[1, "conformalpredictor"]], "Predictor": [[1, "predictor"]], "Calibrator": [[1, "calibrator"]], "Splitter": [[1, "splitter"]], "Calibration": [[2, "calibration"]], "\ud83d\udcca Classification": [[3, "classification"]], "Conformalization": [[4, "module-conformalization"]], "Experimental": [[5, "experimental"]], "\ud83d\ude80 Quickstart": [[6, "quickstart"]], "\ud83d\udcc8 Conformal Regression": [[6, "conformal-regression"]], "\ud83d\udcbe Diabetes Dataset": [[6, "diabetes-dataset"]], "\ud83d\udd2e Prediction model": [[6, "prediction-model"]], "\u2699\ufe0f Conformal prediction": [[6, "conformal-prediction"], [6, "id2"]], "\ud83d\udcca Conformal Classification": [[6, "conformal-classification"]], "\ud83d\udcbe MNIST Dataset": [[6, "mnist-dataset"]], "\ud83d\udd2e Prediction Model": [[6, "id1"]], "\ud83d\udea9 Conformal Anomaly Detection": [[6, "conformal-anomaly-detection"]], "\ud83d\udcbe Two moons Dataset": [[6, "two-moons-dataset"]], "\ud83d\udd2e Anomaly detection model": [[6, "anomaly-detection-model"]], "\u2699\ufe0f Conformal Anomaly Detection": [[6, "id3"]], "Welcome to puncc\u2019s documentation!": [[7, "welcome-to-puncc-s-documentation"]], "Contents": [[7, null]], "\ud83d\udccf Metrics": [[8, "module-metrics"]], "Nonconformity scores": [[9, "module-nonconformity_scores"]], "\ud83d\uddbc\ufe0f Object Detection": [[10, "object-detection"]], "\ud83d\uddbc\ufe0f Plotting": [[11, "module-plotting"]], "Prediction": [[12, "prediction"]], "Prediction sets": [[13, "module-prediction_sets"]], "\ud83d\udcc8 Regression": [[14, "regression"]], "Splitting": [[15, "splitting"]], "\ud83d\udcc8 Theory overview": [[16, "theory-overview"]], "Uncertainty Quantification": [[16, "uncertainty-quantification"]], "Conformal Prediction": [[16, "conformal-prediction"]], "Conformal Regression": [[16, "conformal-regression"]], "Split (inductive) Conformal": [[16, "split-inductive-conformal"]], "Locally Adaptive Conformal Regression": [[16, "locally-adaptive-conformal-regression"]], "Conformalized Quantile Regression (CQR)": [[16, "conformalized-quantile-regression-cqr"]], "Cross-validation+ (CV+), Jackknife+": [[16, "cross-validation-cv-jackknife"]], "Ensemble Batch Prediction Intervals (EnbPI)": [[16, "ensemble-batch-prediction-intervals-enbpi"]], "Conformal Classification": [[16, "conformal-classification"]], "Least Ambiguous Set-Valued Classifiers (LAC)": [[16, "least-ambiguous-set-valued-classifiers-lac"]], "Adaptive Prediction Sets (APS)": [[16, "adaptive-prediction-sets-aps"]], "Regularized Adaptive Prediction Sets (RAPS)": [[16, "regularized-adaptive-prediction-sets-raps"]], "Conformal Anomaly Detection": [[16, "conformal-anomaly-detection"]], "Conformal Object Detection": [[16, "conformal-object-detection"]], "References": [[16, "references"]], "Utils": [[17, "utils"]]}, "indexentries": {"splitcad (class in deel.puncc.anomaly_detection)": [[0, "deel.puncc.anomaly_detection.SplitCAD"]], "fit() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.fit"]], "predict() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.predict"]], "basecalibrator (class in calibration)": [[2, "calibration.BaseCalibrator"]], "cvpluscalibrator (class in calibration)": [[2, "calibration.CvPlusCalibrator"]], "scorecalibrator (class in calibration)": [[2, "calibration.ScoreCalibrator"]], "barber_weights() (calibration.basecalibrator static method)": [[2, "calibration.BaseCalibrator.barber_weights"]], "calibrate() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.calibrate"]], "calibrate() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.calibrate"]], "calibration": [[2, "module-calibration"]], "compute_quantile() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.compute_quantile"]], "fit() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.fit"]], "fit() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.fit"]], "fit() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.fit"]], "get_nonconformity_scores() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_nonconformity_scores"]], "get_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.get_nonconformity_scores"]], "get_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_norm_weights"]], "is_conformal() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.is_conformal"]], "module": [[2, "module-calibration"], [4, "module-conformalization"], [5, "module-experimental"], [8, "module-metrics"], [9, "module-nonconformity_scores"], [11, "module-plotting"], [12, "module-prediction"], [13, "module-prediction_sets"]], "set_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.set_nonconformity_scores"]], "set_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.set_norm_weights"]], "aps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.APS"]], "lac (class in deel.puncc.classification)": [[3, "deel.puncc.classification.LAC"]], "raps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.RAPS"]], "fit() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.fit"]], "fit() (deel.puncc.classification.lac method)": [[3, "deel.puncc.classification.LAC.fit"]], "fit() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.fit"]], "get_nonconformity_scores() (deel.puncc.classification.lac method)": [[3, "deel.puncc.classification.LAC.get_nonconformity_scores"]], "predict() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.predict"]], "predict() (deel.puncc.classification.lac method)": [[3, "deel.puncc.classification.LAC.predict"]], "predict() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.predict"]], "conformalpredictor (class in conformalization)": [[4, "conformalization.ConformalPredictor"]], "crossvalcpaggregator (class in conformalization)": [[4, "conformalization.CrossValCpAggregator"]], "append_calibrator() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_calibrator"]], "append_predictor() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_predictor"]], "conformalization": [[4, "module-conformalization"]], "fit() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.fit"]], "get_nonconformity_scores() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_nonconformity_scores"]], "get_nonconformity_scores() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_nonconformity_scores"]], "get_weights() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_weights"]], "get_weights() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_weights"]], "load() (conformalization.conformalpredictor static method)": [[4, "conformalization.ConformalPredictor.load"]], "predict() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.predict"]], "predict() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.predict"]], "save() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.save"]], "torchpredictor (class in experimental)": [[5, "experimental.TorchPredictor"]], "copy() (experimental.torchpredictor method)": [[5, "experimental.TorchPredictor.copy"]], "experimental": [[5, "module-experimental"]], "fit() (experimental.torchpredictor method)": [[5, "experimental.TorchPredictor.fit"]], "predict() (experimental.torchpredictor method)": [[5, "experimental.TorchPredictor.predict"]], "classification_mean_coverage() (in module metrics)": [[8, "metrics.classification_mean_coverage"]], "classification_mean_size() (in module metrics)": [[8, "metrics.classification_mean_size"]], "iou() (in module metrics)": [[8, "metrics.iou"]], "metrics": [[8, "module-metrics"]], "object_detection_mean_area() (in module metrics)": [[8, "metrics.object_detection_mean_area"]], "object_detection_mean_coverage() (in module metrics)": [[8, "metrics.object_detection_mean_coverage"]], "regression_ace() (in module metrics)": [[8, "metrics.regression_ace"]], "regression_mean_coverage() (in module metrics)": [[8, "metrics.regression_mean_coverage"]], "regression_sharpness() (in module metrics)": [[8, "metrics.regression_sharpness"]], "absolute_difference() (in module nonconformity_scores)": [[9, "nonconformity_scores.absolute_difference"]], "cqr_score() (in module nonconformity_scores)": [[9, "nonconformity_scores.cqr_score"]], "difference() (in module nonconformity_scores)": [[9, "nonconformity_scores.difference"]], "lac_score() (in module nonconformity_scores)": [[9, "nonconformity_scores.lac_score"]], "nonconformity_scores": [[9, "module-nonconformity_scores"]], "raps_score() (in module nonconformity_scores)": [[9, "nonconformity_scores.raps_score"]], "raps_score_builder() (in module nonconformity_scores)": [[9, "nonconformity_scores.raps_score_builder"]], "scaled_ad() (in module nonconformity_scores)": [[9, "nonconformity_scores.scaled_ad"]], "scaled_bbox_difference() (in module nonconformity_scores)": [[9, "nonconformity_scores.scaled_bbox_difference"]], "splitboxwise (class in deel.puncc.object_detection)": [[10, "deel.puncc.object_detection.SplitBoxWise"]], "fit() (deel.puncc.object_detection.splitboxwise method)": [[10, "deel.puncc.object_detection.SplitBoxWise.fit"]], "get_nonconformity_scores() (deel.puncc.object_detection.splitboxwise method)": [[10, "deel.puncc.object_detection.SplitBoxWise.get_nonconformity_scores"]], "predict() (deel.puncc.object_detection.splitboxwise method)": [[10, "deel.puncc.object_detection.SplitBoxWise.predict"]], "draw_bounding_box() (in module plotting)": [[11, "plotting.draw_bounding_box"]], "plot_prediction_intervals() (in module plotting)": [[11, "plotting.plot_prediction_intervals"]], "plotting": [[11, "module-plotting"]], "basepredictor (class in prediction)": [[12, "prediction.BasePredictor"]], "dualpredictor (class in prediction)": [[12, "prediction.DualPredictor"]], "idpredictor (class in prediction)": [[12, "prediction.IdPredictor"]], "meanvarpredictor (class in prediction)": [[12, "prediction.MeanVarPredictor"]], "copy() (prediction.basepredictor method)": [[12, "prediction.BasePredictor.copy"]], "copy() (prediction.dualpredictor method)": [[12, "prediction.DualPredictor.copy"]], "copy() (prediction.idpredictor method)": [[12, "prediction.IdPredictor.copy"]], "copy() (prediction.meanvarpredictor method)": [[12, "prediction.MeanVarPredictor.copy"]], "fit() (prediction.basepredictor method)": [[12, "prediction.BasePredictor.fit"]], "fit() (prediction.dualpredictor method)": [[12, "prediction.DualPredictor.fit"]], "fit() (prediction.idpredictor method)": [[12, "prediction.IdPredictor.fit"]], "fit() (prediction.meanvarpredictor method)": [[12, "prediction.MeanVarPredictor.fit"]], "get_is_trained() (prediction.basepredictor method)": [[12, "prediction.BasePredictor.get_is_trained"]], "get_is_trained() (prediction.dualpredictor method)": [[12, "prediction.DualPredictor.get_is_trained"]], "get_is_trained() (prediction.idpredictor method)": [[12, "prediction.IdPredictor.get_is_trained"]], "get_is_trained() (prediction.meanvarpredictor method)": [[12, "prediction.MeanVarPredictor.get_is_trained"]], "predict() (prediction.basepredictor method)": [[12, "prediction.BasePredictor.predict"]], "predict() (prediction.dualpredictor method)": [[12, "prediction.DualPredictor.predict"]], "predict() (prediction.idpredictor method)": [[12, "prediction.IdPredictor.predict"]], "predict() (prediction.meanvarpredictor method)": [[12, "prediction.MeanVarPredictor.predict"]], "predict_with_model() (prediction.idpredictor method)": [[12, "prediction.IdPredictor.predict_with_model"]], "prediction": [[12, "module-prediction"]], "constant_bbox() (in module prediction_sets)": [[13, "prediction_sets.constant_bbox"]], "constant_interval() (in module prediction_sets)": [[13, "prediction_sets.constant_interval"]], "cqr_interval() (in module prediction_sets)": [[13, "prediction_sets.cqr_interval"]], "lac_set() (in module prediction_sets)": [[13, "prediction_sets.lac_set"]], "prediction_sets": [[13, "module-prediction_sets"]], "raps_set() (in module prediction_sets)": [[13, "prediction_sets.raps_set"]], "raps_set_builder() (in module prediction_sets)": [[13, "prediction_sets.raps_set_builder"]], "scaled_bbox() (in module prediction_sets)": [[13, "prediction_sets.scaled_bbox"]], "scaled_interval() (in module prediction_sets)": [[13, "prediction_sets.scaled_interval"]], "adaptiveenbpi (class in deel.puncc.regression)": [[14, "deel.puncc.regression.AdaptiveEnbPI"]], "cqr (class in deel.puncc.regression)": [[14, "deel.puncc.regression.CQR"]], "cvplus (class in deel.puncc.regression)": [[14, "deel.puncc.regression.CVPlus"]], "enbpi (class in deel.puncc.regression)": [[14, "deel.puncc.regression.EnbPI"]], "locallyadaptivecp (class in deel.puncc.regression)": [[14, "deel.puncc.regression.LocallyAdaptiveCP"]], "splitcp (class in deel.puncc.regression)": [[14, "deel.puncc.regression.SplitCP"]], "fit() (deel.puncc.regression.adaptiveenbpi method)": [[14, "deel.puncc.regression.AdaptiveEnbPI.fit"]], "fit() (deel.puncc.regression.cqr method)": [[14, "deel.puncc.regression.CQR.fit"]], "fit() (deel.puncc.regression.cvplus method)": [[14, "deel.puncc.regression.CVPlus.fit"]], "fit() (deel.puncc.regression.enbpi method)": [[14, "deel.puncc.regression.EnbPI.fit"]], "fit() (deel.puncc.regression.locallyadaptivecp method)": [[14, "deel.puncc.regression.LocallyAdaptiveCP.fit"]], "fit() (deel.puncc.regression.splitcp method)": [[14, "deel.puncc.regression.SplitCP.fit"]], "get_nonconformity_scores() (deel.puncc.regression.cqr method)": [[14, "deel.puncc.regression.CQR.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.cvplus method)": [[14, "deel.puncc.regression.CVPlus.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.locallyadaptivecp method)": [[14, "deel.puncc.regression.LocallyAdaptiveCP.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.splitcp method)": [[14, "deel.puncc.regression.SplitCP.get_nonconformity_scores"]], "predict() (deel.puncc.regression.adaptiveenbpi method)": [[14, "deel.puncc.regression.AdaptiveEnbPI.predict"]], "predict() (deel.puncc.regression.cqr method)": [[14, "deel.puncc.regression.CQR.predict"]], "predict() (deel.puncc.regression.cvplus method)": [[14, "deel.puncc.regression.CVPlus.predict"]], "predict() (deel.puncc.regression.enbpi method)": [[14, "deel.puncc.regression.EnbPI.predict"]], "predict() (deel.puncc.regression.locallyadaptivecp method)": [[14, "deel.puncc.regression.LocallyAdaptiveCP.predict"]], "predict() (deel.puncc.regression.splitcp method)": [[14, "deel.puncc.regression.SplitCP.predict"]], "basesplitter (class in splitting)": [[15, "splitting.BaseSplitter"]], "idsplitter (class in splitting)": [[15, "splitting.IdSplitter"]], "kfoldsplitter (class in splitting)": [[15, "splitting.KFoldSplitter"]], "randomsplitter (class in splitting)": [[15, "splitting.RandomSplitter"]], "__call__() (splitting.idsplitter method)": [[15, "splitting.IdSplitter.__call__"]], "__call__() (splitting.kfoldsplitter method)": [[15, "splitting.KFoldSplitter.__call__"]], "__call__() (splitting.randomsplitter method)": [[15, "splitting.RandomSplitter.__call__"]], "alpha_calib_check() (in module deel.puncc.api.utils)": [[17, "deel.puncc.api.utils.alpha_calib_check"]], "hungarian_assignment() (in module deel.puncc.api.utils)": [[17, "deel.puncc.api.utils.hungarian_assignment"]], "quantile() (in module deel.puncc.api.utils)": [[17, "deel.puncc.api.utils.quantile"]]}})