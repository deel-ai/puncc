Search.setIndex({"docnames": ["anomaly_detection", "api", "calibration", "classification", "conformalization", "getting_started", "index", "metrics", "nonconformity_scores", "plotting", "prediction", "prediction_sets", "regression", "splitting", "theory_overview", "utils"], "filenames": ["anomaly_detection.rst", "api.rst", "calibration.rst", "classification.rst", "conformalization.rst", "getting_started.rst", "index.rst", "metrics.rst", "nonconformity_scores.rst", "plotting.rst", "prediction.rst", "prediction_sets.rst", "regression.rst", "splitting.rst", "theory_overview.rst", "utils.rst"], "titles": ["\ud83d\udea9 Anomaly detection", "\ud83d\udcbb API", "Calibration", "\ud83d\udcca Classification", "Conformalization", "\ud83d\ude80 Quickstart", "Welcome to puncc\u2019s documentation!", "\ud83d\udccf Metrics", "Nonconformity scores", "\ud83d\uddbc\ufe0f Plotting", "Prediction", "Prediction sets", "\ud83d\udcc8 Regression", "Splitting", "\ud83d\udcc8 Theory overview", "Utils"], "terms": {"current": [0, 3, 4, 10, 12], "implement": [0, 1, 2, 3, 5, 8, 11, 12, 13], "conform": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12], "detector": [0, 5], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15], "list": [0, 1, 3, 10, 12, 13], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15], "page": [0, 3, 5, 12, 14], "each": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14], "wrapper": [0, 1, 3, 4, 5, 10, 12], "calibr": [0, 3, 4, 5, 8, 11, 12, 13, 14, 15], "decis": [0, 2], "threshold": [0, 2, 5], "pass": [0, 1, 2, 3, 9, 10, 12], "argument": [0, 1, 2, 3, 5, 9, 10, 12], "object": [0, 1, 2, 3, 4, 10, 12], "constructor": [0, 1, 2, 3, 5, 10, 12], "Such": [0, 1, 2, 3, 5, 12], "model": [0, 1, 2, 3, 4, 6, 10, 12, 14], "need": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14], "fit": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14], "predict": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12], "method": [0, 1, 2, 3, 4, 5, 10, 12, 14, 15], "modul": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12], "from": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15], "api": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 15], "ensur": [0, 3, 5, 12], "complianc": [0, 1, 3, 12], "variou": [0, 3, 5, 12, 14], "ml": [0, 1, 3, 5, 10, 12], "dl": [0, 1, 3, 5, 12], "librari": [0, 3, 5, 6, 10, 12], "kera": [0, 1, 3, 5, 10, 12], "scikit": [0, 3, 5, 10, 12], "learn": [0, 3, 5, 10, 12, 14], "puncc": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 15], "class": [0, 1, 2, 3, 4, 5, 8, 10, 11, 12, 13], "deel": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 15], "anomaly_detect": [0, 5], "splitcad": [0, 5], "predictor": [0, 2, 3, 4, 5, 10, 12, 14], "train": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "random_st": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13], "none": [0, 2, 3, 4, 9, 10, 12, 13, 15], "split": [0, 1, 2, 3, 4, 5, 12], "base": [0, 1, 2, 4, 10, 12, 14], "laxhammar": 0, "": [0, 2, 3, 4, 5, 7, 10, 12, 14], "algorithm": [0, 2, 5, 6, 10, 14], "The": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "through": [0, 5, 14], "underli": [0, 1, 5, 10, 12, 14], "score": [0, 1, 2, 3, 4, 5, 11, 12, 14], "For": [0, 1, 3, 5, 8, 10, 11, 12, 14], "more": [0, 1, 2, 3, 5, 10, 12, 14], "detail": [0, 3, 5, 10, 12], "we": [0, 1, 2, 3, 5, 10, 12, 14, 15], "refer": [0, 3, 12], "user": [0, 1, 2, 3, 5, 6, 12, 14], "theori": [0, 3, 6, 12], "overview": [0, 3, 6, 12], "paramet": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15], "basepredictor": [0, 1, 3, 4, 5, 10, 12], "bool": [0, 2, 3, 4, 10, 12, 15], "fals": [0, 1, 2, 3, 4, 5, 9, 10, 12, 15], "re": [0, 4, 12], "default": [0, 2, 3, 4, 5, 10, 12, 15], "float": [0, 2, 3, 4, 7, 8, 11, 12, 13, 15], "random": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 14], "seed": [0, 1, 3, 9, 12, 13], "us": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14], "when": [0, 1, 2, 3, 8, 11, 12, 14, 15], "doe": [0, 1, 3, 12, 14], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "custom": [0, 1, 3, 12], "exampl": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14], "import": [0, 1, 2, 3, 4, 5, 9, 10, 12], "numpi": [0, 2, 3, 5, 9, 10, 12], "np": [0, 1, 2, 3, 5, 7, 9, 10, 12], "sklearn": [0, 1, 2, 3, 4, 5, 9, 10, 12], "ensembl": [0, 1, 3, 4, 5, 10, 12], "isolationforest": [0, 5], "dataset": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15], "make_moon": [0, 2, 5], "matplotlib": [0, 2, 5, 9], "pyplot": [0, 2, 5, 9], "plt": [0, 2, 5, 9], "gener": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14], "two": [0, 1, 2, 8, 9, 10, 11, 12, 14], "moon": [0, 2], "4": [0, 1, 2, 3, 4, 5, 12], "n_sampl": [0, 1, 2, 3, 4, 5, 9, 12], "1000": [0, 1, 2, 3, 4, 10, 12], "nois": [0, 2, 5, 9], "0": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15], "05": [0, 2, 5, 14], "arrai": [0, 2, 5, 10, 12, 13], "5": [0, 2, 5, 10], "25": [0, 2, 5], "uniformli": [0, 5], "new": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14], "test": [0, 1, 2, 3, 4, 5, 12, 14], "data": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14], "point": [0, 1, 2, 4, 5, 9, 10, 12, 13, 14], "rng": [0, 2, 5], "randomst": [0, 2, 5], "42": [0, 1, 2, 4, 5], "z_test": [0, 5], "uniform": [0, 2, 5, 10], "low": [0, 1, 2, 5], "6": [0, 1, 2, 5], "high": [0, 2, 5], "size": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15], "150": 0, "2": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14], "nonconform": [0, 1, 2, 3, 4, 5, 11, 12, 14], "defin": [0, 1, 2, 3, 5, 6, 12, 13], "IF": [0, 5], "By": [0, 2, 5, 15], "score_sampl": [0, 2, 5], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15], "opposit": [0, 2, 5], "redefin": [0, 1, 3, 5], "output": [0, 1, 5, 6, 9], "adpredictor": [0, 5], "def": [0, 1, 2, 3, 5], "self": [0, 1, 3, 5], "x": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 14], "instanti": [0, 2, 4, 5, 10], "isol": [0, 5], "forest": [0, 1, 3, 5, 10, 12], "wrap": [0, 1, 3, 5, 10, 12, 13], "if_predictor": [0, 5], "cad": [0, 2, 5], "top": [0, 5], "if_cad": [0, 5], "proper": [0, 2, 5, 14], "sampl": [0, 1, 2, 3, 4, 5, 12, 13, 14, 15], "randomli": [0, 1, 3, 5, 12], "ration": [0, 5], "7": [0, 5], "3": [0, 3, 5, 8, 11, 14], "respect": [0, 1, 2, 3, 5, 10, 12, 14], "z": [0, 2, 5], "fit_ratio": [0, 3, 5, 12], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15], "maximum": [0, 2, 3, 5, 12, 14], "rate": [0, 2, 5, 14], "1": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "alpha": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15], "01": [0, 2], "call": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14], "which": [0, 1, 2, 3, 5, 8, 10, 11, 14], "anomal": [0, 2, 5], "result": [0, 2, 5], "not_anomali": [0, 2], "invert": [0, 2, 5], "plot": [0, 1, 2, 5, 6], "scatter": [0, 2, 5], "10": [0, 1, 2, 4, 5, 9, 10, 14], "label": [0, 2, 3, 4, 5, 7, 8, 10, 12, 13], "inlier": [0, 2, 5], "marker": [0, 2, 5], "color": [0, 2, 5], "red": [0, 2, 5], "40": [0, 2, 5], "blue": [0, 2, 5], "normal": [0, 2, 4, 5, 9, 14], "xtick": [0, 2], "ytick": [0, 2], "legend": [0, 2, 5], "8": [0, 2, 3, 12], "z_fit": 0, "z_calib": 0, "kwarg": [0, 1, 3, 4, 10, 12], "comput": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15], "If": [0, 1, 3, 4, 7, 8, 10, 11, 12, 14, 15], "calib": [0, 1, 2, 3, 5, 12], "subset": [0, 1, 2, 3, 5, 12, 13], "w": [0, 1, 2, 3, 4, 5, 12, 14, 15], "r": [0, 1, 2, 3, 4, 5, 8, 12, 14], "t": [0, 1, 2, 3, 4, 5, 10, 12, 14], "In": [0, 1, 2, 3, 5, 10, 12, 14], "case": [0, 1, 2, 3, 4, 12, 14], "perform": [0, 3, 12, 14], "given": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "ignor": [0, 3, 5, 12], "ani": [0, 1, 3, 4, 6, 10, 12, 14], "iter": [0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 15], "proport": [0, 3, 11, 12], "assign": [0, 1, 2, 3, 12, 13], "dict": [0, 2, 3, 4, 10, 12], "configur": [0, 1, 3, 4, 9, 10, 12], "rais": [0, 2, 3, 4, 8, 10, 12, 15], "runtimeerror": [0, 2, 3, 4, 10, 12], "whether": [0, 5], "an": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15], "taken": 0, "target": [0, 1, 2, 3, 4, 5, 7, 12, 14, 15], "fdr": [0, 5], "outlier": [0, 5], "tag": 0, "otherwis": [0, 1, 2, 3, 7, 9, 14], "type": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "level": [1, 2, 3, 4, 7, 12, 14], "offer": [1, 2], "flexibl": 1, "let": [1, 5, 14], "sai": 1, "want": [1, 2, 5, 10], "neural": [1, 3], "network": [1, 3], "interv": [1, 2, 3, 4, 5, 7, 9, 11, 12, 15], "estim": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15], "cross": [1, 12], "valid": [1, 12], "plan": 1, "experi": [1, 14], "differ": [1, 4, 5, 14], "other": [1, 5], "can": [1, 2, 5, 6, 14], "fulli": 1, "construct": [1, 2, 5, 14], "propos": 1, "paradigm": 1, "It": [1, 5, 6, 14], "boil": [1, 14], "down": [1, 14], "assembl": 1, "A": [1, 10, 12, 13, 14], "strategi": [1, 4, 13], "induct": [1, 5], "cp": [1, 3, 5, 12, 14], "crossvalcpaggreg": [1, 4], "dualpredictor": [1, 4, 10, 12], "meanvarpredictor": [1, 10, 12], "basecalibr": [1, 2, 4, 8, 11], "cvpluscalibr": [1, 2], "scorecalibr": [1, 2], "basesplitt": [1, 4, 13], "idsplitt": [1, 13], "randomsplitt": [1, 13], "kfoldsplitt": [1, 4, 13], "util": [1, 3, 5, 10], "alpha_calib_check": [1, 15], "quantil": [1, 2, 8, 10, 11, 12, 15], "cqr_score": [1, 8], "mad": [1, 2, 4, 8], "raps_scor": [1, 8], "raps_score_build": [1, 8], "scaled_mad": [1, 8], "constant_interv": [1, 4, 11], "cqr_interv": [1, 11], "raps_set": [1, 11], "raps_set_build": [1, 11], "scaled_interv": [1, 11], "canva": [1, 4], "procedur": [1, 4, 5, 12, 14], "instanc": [1, 4, 10], "explain": 1, "later": [1, 5], "linear_model": [1, 4, 5, 10], "regress": [1, 2, 3, 4, 6, 9, 10], "linear": [1, 4, 5], "linearregress": [1, 4, 5, 10], "definit": [1, 2, 4], "my_predictor": 1, "built": [1, 4, 11], "build": [1, 3, 4, 8, 11, 14], "function": [1, 2, 8, 9, 10, 11, 12, 13, 14], "altern": 1, "sever": [1, 5, 7, 14], "readi": [1, 2], "nonconf": 1, "nonconformity_scor": [1, 2, 4, 8], "my_ncf": 1, "y_pred": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12], "y_true": [1, 2, 7, 8, 9, 12], "ab": [1, 2, 14], "prediction_set": [1, 2, 4, 11], "my_psf": 1, "nonconf_scores_quantil": 1, "y_lower": [1, 2, 4, 12], "y_upper": [1, 2, 4], "my_calibr": 1, "nonconf_score_func": [1, 2, 4], "pred_set_func": [1, 2, 4], "k": [1, 2, 4, 12, 13, 14], "fold": [1, 2, 4, 12, 13, 14], "produc": [1, 2, 4, 5, 14], "20": [1, 3, 4, 9, 12], "kfold_splitt": [1, 4], "conformal_predictor": [1, 4], "accordingli": [1, 4], "x_train": [1, 3, 4, 5, 10], "y_train": [1, 3, 4, 5, 10], "full": 1, "And": 1, "y_pred_low": [1, 2, 5, 7, 9, 12], "y_pred_upp": [1, 5, 7, 9, 12], "chosen": [1, 5], "error": [1, 2, 6, 7, 14], "signific": [1, 2, 3, 4, 7, 12, 14], "coverag": [1, 3, 5, 7, 12, 14], "90": [1, 5, 10], "x_new": [1, 10], "code": [1, 5, 10], "snippet": [1, 10], "previou": 1, "cvplu": [1, 12], "like": [1, 3, 4, 8, 10, 11, 14], "below": [1, 2, 5, 10, 14], "make_regress": [1, 4, 9, 12], "model_select": [1, 2, 3, 4, 12], "train_test_split": [1, 2, 3, 4, 12], "plot_prediction_interv": [1, 9], "metric": [1, 3, 5, 6, 12], "problem": [1, 3, 4, 5, 6, 9, 12, 14], "y": [1, 3, 4, 9, 10, 12, 13, 14], "n_featur": [1, 3, 4, 9, 12], "n_inform": [1, 3, 4, 9, 12], "shuffl": [1, 3, 4, 9, 12], "x_test": [1, 3, 4, 5, 12], "y_test": [1, 3, 4, 5, 12], "test_siz": [1, 3, 4, 12], "empir": [1, 5, 7, 14, 15], "margin": [1, 3, 5, 7, 11, 12, 14], "averag": [1, 3, 5, 7, 12, 14], "width": [1, 5, 7, 12, 14], "regression_mean_coverag": [1, 5, 7, 12], "regression_sharp": [1, 5, 7, 12], "print": [1, 3, 5, 12], "f": [1, 2, 3, 5, 10, 12, 14], "round": [1, 3, 5, 12], "figur": [1, 5, 9], "band": 1, "sort_x": 1, "loc": [1, 2, 5, 9], "upper": [1, 2, 4, 7, 9, 11, 12, 14], "left": [1, 2, 5, 14], "aim": 1, "expos": [1, 10], "standard": [1, 5, 10], "interfac": [1, 8, 10, 11], "guarante": [1, 5, 6, 14], "framework": [1, 2, 14], "have": [1, 2, 4, 14], "take": [1, 2, 8, 11, 12], "collect": [1, 2, 4, 5, 6, 15], "ndarrai": [1, 2, 4, 7, 9, 10, 11, 12, 15], "tensor": 1, "addit": [1, 5, 9, 14, 15], "e": [1, 3, 10, 14], "g": [1, 3, 10, 14], "batch": [1, 10, 12], "copi": [1, 10], "ha": [1, 3, 5, 8, 11, 14, 15], "deepcopi": [1, 10], "flag": [1, 10], "inform": [1, 5, 10, 14], "alreadi": [1, 2, 5, 13], "compil": [1, 5, 10], "keyword": [1, 9, 10], "conceptu": 1, "similar": [1, 10], "reli": [1, 14], "lower": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14], "cqr": [1, 8, 11, 12], "note": [1, 3, 5, 11, 14], "coupl": [1, 8, 10], "where": [1, 8, 10, 11, 14], "first": [1, 2, 9, 14], "resp": [1, 8, 10], "second": [1, 9, 10], "axi": [1, 9], "associ": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 15], "specif": [1, 10, 14], "subclass": [1, 3, 10], "one": [1, 2, 5, 12, 13, 14], "absolut": [1, 2, 7, 8, 10, 14], "former": 1, "These": 1, "three": [1, 4, 5], "cover": [1, 5, 6], "plenti": 1, "But": [1, 10], "you": [1, 5, 10], "special": 1, "even": 1, "creat": [1, 3, 5, 9, 12], "scratch": [1, 2], "here": [1, 5, 10, 13], "situat": 1, "your": 1, "own": 1, "classif": [1, 2, 6, 10], "randomforestclassifi": [1, 3], "rap": [1, 3, 5, 8, 11], "classifi": [1, 3, 5, 10], "requir": [1, 4, 10, 14, 15], "probabl": [1, 3, 8, 11, 14], "onli": [1, 3, 5, 10], "most": [1, 3, 8, 11, 14], "rf": [1, 3, 12], "rf_model": [1, 3, 10, 12], "n_estim": [1, 3, 10, 12], "100": [1, 3, 5, 9, 10, 12], "its": [1, 3], "logit": [1, 3, 8, 11], "make": [1, 3, 5], "sure": [1, 3], "over": [1, 3, 10, 14], "becaus": [1, 3, 5], "enough": [1, 3], "softmax": [1, 3, 5, 10], "rfpredictor": [1, 3], "predict_proba": [1, 3], "newli": [1, 3], "rf_predictor": [1, 3, 12], "structur": [1, 2, 5, 13], "At": [1, 14], "decid": [1, 2], "Then": [1, 14], "mean": [1, 2, 8, 10, 12, 14], "deviat": [1, 2, 5, 8, 10, 14], "enabl": [1, 4, 10, 12], "constant": [1, 11, 14], "them": [1, 14], "motiv": 1, "criteria": 1, "avail": 1, "resourc": 1, "qualiti": 1, "abund": 1, "disjoint": [1, 2], "d_": [1, 5, 14], "scarc": 1, "prefer": 1, "consum": 1, "agnost": [1, 14], "datafram": 1, "equal": [1, 15], "identifi": [1, 3, 8, 11], "leav": [1, 12, 14], "out": [1, 5, 12, 14], "additionnali": [1, 9], "obtain": [1, 2, 5, 14], "asign": 1, "core": 2, "weight_func": [2, 12], "callabl": [2, 8, 11, 12], "featur": [2, 3, 4, 5, 10, 12, 13], "weight": [2, 3, 4, 8, 11, 12, 15], "notimplementederror": [2, 10, 15], "weight_method": 2, "suitabl": 2, "consid": [2, 5, 8, 10, 11, 15], "pretrain": 2, "hat": [2, 10], "x_": [2, 10, 14], "y_": [2, 7, 8, 10, 11, 14], "pred": [2, 8, 11], "befor": [2, 4, 5], "how": [2, 10, 13], "valu": [2, 7, 9, 10, 14, 15], "reimplement": 2, "nonconformity_funct": 2, "fix": 2, "around": [2, 5], "prediction_set_funct": 2, "scores_quantil": [2, 11], "y_lo": 2, "y_hi": 2, "abov": [2, 5, 14], "dummi": [2, 9], "y_pred_calib": 2, "rand": 2, "y_true_calib": 2, "y_pred_test": 2, "bound": [2, 4, 7, 9, 12, 14], "risk": [2, 4], "y_pred_high": 2, "static": [2, 4], "barber_weight": 2, "infer": [2, 3, 12, 14], "distribut": [2, 5, 14], "barber": [2, 14], "et": [2, 12], "al": [2, 12], "max": [2, 4, 7, 8, 14], "miscoverag": [2, 3, 4, 7, 12], "all": [2, 5, 9, 14], "equiprob": 2, "tupl": [2, 3, 4, 7, 10, 11, 12, 13], "valueerror": [2, 15], "fail": 2, "check": [2, 5, 10, 15], "store": [2, 12, 14], "get_nonconformity_scor": [2, 4, 12], "getter": [2, 4], "get_norm_weight": 2, "set_norm_weight": 2, "norm_weight": 2, "setter": 2, "kfold_calibr": 2, "meta": 2, "combin": [2, 4, 10, 14], "cv": [2, 4, 12], "kfold_calibrators_dict": 2, "priorli": 2, "kfold_predictors_dict": 2, "dictionnari": [2, 4, 5], "been": [2, 14], "did": 2, "is_conform": 2, "anomali": [2, 6], "detect": [2, 6], "follow": [2, 4, 5, 10, 12, 14], "lof": 2, "neighbor": 2, "localoutlierfactor": 2, "fit_set": 2, "calib_set": 2, "train_siz": 2, "new_sampl": 2, "200": 2, "n_neighbor": 2, "35": 2, "novelti": 2, "ncf": 2, "lambda": [2, 3, 5, 8, 11, 12], "set_nonconformity_scor": 2, "instead": 2, "lambd": [3, 5, 8, 11], "k_reg": [3, 8, 11], "regular": [3, 5, 8, 11], "adapt": [3, 12], "hyperparamet": [3, 8, 11], "k_": [3, 5, 8, 11], "reg": [3, 5, 8, 11], "encourag": [3, 5, 8, 11], "small": [3, 8, 11, 14], "posit": [3, 7, 8, 11], "term": [3, 5, 8, 11], "ap": [3, 5, 8, 11], "rank": [3, 8, 11], "order": [3, 8, 11, 15], "descend": [3, 8, 11], "start": [3, 5, 8, 11], "appli": [3, 5, 8, 11], "fourth": [3, 8, 11], "extra": [3, 8, 11], "penalti": [3, 8, 11], "make_classif": 3, "classification_mean_coverag": [3, 5, 7], "classification_mean_s": [3, 5, 7], "tensorflow": [3, 5, 10], "to_categor": [3, 5, 10], "n_class": 3, "x_fit": [3, 5, 12, 13], "x_calib": [3, 5, 12, 13], "y_fit": [3, 5, 12, 13], "y_calib": [3, 5, 12, 13], "One": [3, 5], "hot": [3, 5], "encod": [3, 5], "y_fit_cat": [3, 5], "y_calib_cat": [3, 5], "y_test_cat": [3, 5], "initi": [3, 5, 8, 11, 12], "raps_cp": 3, "set_pr": [3, 5, 7], "compos": [3, 5, 10, 12], "aps_cp": [3, 5], "conformalpredictor": 4, "splitter": [4, 13], "str": [4, 10], "handl": 4, "attribut": 4, "except": [4, 14], "dure": [4, 5, 10, 14], "compon": 4, "previous": [4, 10, 12], "our": [4, 5, 10, 14], "choic": 4, "yield": [4, 10, 14], "besid": [4, 10], "aggreg": [4, 12], "so": [4, 10, 14], "use_cach": [4, 12], "oper": 4, "separ": 4, "thereaft": 4, "add": [4, 10, 12], "pool": [4, 5, 12], "option": [4, 9, 10], "inconsist": [4, 15], "between": [4, 5, 7], "statu": 4, "dictionari": 4, "index": [4, 5], "get_weight": 4, "load": [4, 5], "path": 4, "file": 4, "y_higher": [4, 12], "save": [4, 5], "serial": 4, "write": 4, "int": [4, 12, 13, 15], "number": [4, 5, 7, 12, 13], "_predictor": 4, "_calibr": 4, "append_calibr": 4, "kei": 4, "kfold": [4, 12, 13], "append": 4, "append_predictor": 4, "get": [4, 12, 14], "residu": [4, 5, 12, 14], "variabl": [4, 5, 14], "simpl": [5, 10], "evalu": 5, "uncertainti": [5, 6], "contain": [5, 10, 14], "about": 5, "442": 5, "patient": 5, "goal": 5, "physiolog": 5, "quantit": 5, "measur": [5, 14], "diseas": 5, "progress": 5, "year": 5, "There": 5, "ten": 5, "correspond": [5, 9, 10], "ag": 5, "sex": 5, "bodi": 5, "mass": 5, "blood": 5, "pressur": 5, "six": 5, "serum": 5, "offici": 5, "document": 5, "diabetes_x": 5, "diabetes_i": 5, "load_diabet": 5, "return_x_i": 5, "shape": [5, 10], "captur": 5, "link": [5, 14], "evolut": 5, "bmi": 5, "newaxi": 5, "indep": 5, "ident": [5, 13], "d": [5, 6, 14], "great": 5, "fullfil": 5, "prerequisit": 5, "next": 5, "step": [5, 14], "splite": 5, "cal": [5, 10], "rigor": [5, 6, 14], "probabilist": 5, "hold": [5, 14], "aforement": 5, "lin_reg_model": 5, "possibl": 5, "xgboost": 5, "support": [5, 10], "checkout": 5, "earlier": 5, "lin_reg_predictor": 5, "throught": 5, "splitcp": [5, 12], "present": [5, 14], "instanci": 5, "time": [5, 14], "split_cp": [5, 12], "95": [5, 14], "211": 5, "38": 5, "tool": 5, "visual": 5, "observ": [5, 7, 14], "tackl": 5, "classic": 5, "handwritten": 5, "digit": 5, "larg": 5, "28": 5, "imag": 5, "As": [5, 14], "process": [5, 14], "post": [5, 14], "applic": [5, 14], "preprocess": 5, "databas": 5, "load_data": 5, "reshap": 5, "len": [5, 9], "astyp": 5, "float32": 5, "255": 5, "50000": 5, "convnet": 5, "layer": [5, 10], "set_se": 5, "convolut": 5, "dens": [5, 10], "nn_model": 5, "sequenti": [5, 10], "input": 5, "conv2d": 5, "16": 5, "kernel_s": 5, "activ": [5, 10], "relu": [5, 10], "maxpooling2d": 5, "pool_siz": 5, "32": [5, 10, 14], "flatten": 5, "is_train": [5, 10, 12], "config": 5, "gather": 5, "compile_kwarg": [5, 10], "optim": [5, 10], "adam": 5, "loss": [5, 10, 12], "categorical_crossentropi": [5, 10], "accuraci": 5, "class_predictor": 5, "hyparamet": 5, "smaller": 5, "To": [5, 8, 10, 11], "off": [5, 10], "gentli": 5, "simpli": [5, 14], "turn": [5, 10], "fit_kwarg": 5, "epoch": [5, 10], "batch_siz": [5, 10], "256": 5, "validation_split": 5, "verbos": [5, 10], "18": 5, "imshow": 5, "titl": 5, "argmax": 5, "n": [5, 7, 10, 14, 15], "mean_coverag": 5, "mean_siz": 5, "2f": 5, "03": 5, "across": 5, "plane": 5, "among": 5, "some": [5, 14, 15], "stand": 5, "significantli": 5, "crescent": 5, "cluster": 5, "subsequ": 5, "remain": 5, "specifi": [5, 10], "synthet": 5, "consist": [5, 10, 15], "popular": 5, "easi": 5, "well": [5, 14], "5000": 5, "300": 5, "n_new": 5, "350": 5, "section": 5, "ad_model": 5, "similarili": 5, "70": 5, "30": [5, 12], "now": 5, "cad_result": 5, "cad_anomali": 5, "cad_not_anomali": 5, "compar": 5, "after": [5, 14], "if_result": 5, "if_not_anomali": 5, "if_anomali": 5, "fig": [5, 9], "ax": [5, 9], "subplot": [5, 9], "ncol": 5, "figsiz": [5, 9], "12": 5, "sharex": 5, "sharei": 5, "set_xtick": 5, "set_ytick": 5, "set_titl": 5, "clear": 5, "reduc": [5, 14], "alarm": 5, "p": [6, 14], "redict": 6, "un": 6, "certainti": 6, "c": [6, 7, 8, 11, 14], "alibr": 6, "onform": 6, "open": [6, 15], "sourc": [6, 14], "python": 6, "integr": 6, "state": 6, "art": 6, "relat": 6, "techniqu": 6, "under": 6, "exchang": [6, 14], "within": [6, 14], "quickstart": 6, "th": [7, 10, 14, 15], "x_i": [7, 10, 14], "cov": 7, "With": [7, 14], "sum_": 7, "regression_ac": 7, "compt": 7, "ac": 7, "distanc": 7, "nomin": 7, "strictli": 7, "neg": 7, "undercov": [7, 14], "magin": 7, "conserv": 7, "text": [8, 11, 14], "q_": [8, 11], "lo": [8, 11, 14], "hi": [8, 11, 14], "higher": [8, 14], "typeerror": 8, "unsupport": [8, 10], "signatur": [8, 11], "incompat": [8, 11], "properli": [8, 11], "p_": [8, 11, 14], "_1": [8, 10, 11], "_n": [8, 11], "_i": [8, 11], "builder": [8, 11], "initialit": [8, 11], "scale": [8, 9, 11, 14], "mu_": [8, 11], "sigma_": [8, 11], "frac": [8, 14], "fig_kw": 9, "whose": 9, "also": [9, 10, 14], "displai": 9, "absciss": 9, "vector": [9, 15], "updat": [9, 12], "120": 9, "best": [9, 14], "y_pred_lower1": 9, "15": 9, "y_pred_upper1": 9, "y_pred_lower2": 9, "y_pred_upper2": 9, "grid": 9, "nrow": 9, "boolean": 10, "pre": 10, "skip": 10, "randomforestregressor": [10, 12], "sin": 10, "tree": 10, "rf_model1": 10, "rf_model2": 10, "predictor1": 10, "predictor2": 10, "don": 10, "retrain": 10, "No": 10, "do": [10, 14], "y_pred1": 10, "y_pred2": 10, "tf": 10, "expand_dim": 10, "els": 10, "cl_model": 10, "intern": [10, 14], "categor": [10, 14], "crossentropi": 10, "rmsprop": 10, "128": 10, "either": 10, "clone": 10, "unsupervis": 10, "compile_arg": 10, "joint": [10, 14], "f_1": 10, "f_2": 10, "_2": 10, "condit": [10, 12, 14, 15], "tensorflow_addon": 10, "tfa": 10, "q_model": 10, "pinball_loss": 10, "pinballloss": 10, "tau": 10, "9": 10, "sgd": 10, "regressor": [10, 12], "tf_predictor": 10, "wherea": 10, "y1": 10, "y2": 10, "m": [10, 14], "matrix": 10, "dictarg": 10, "format": 10, "mu": [10, 12], "dispers": [10, 12, 14], "sigma": [10, 12, 14], "leftarrow": 10, "param": 10, "mu_model": [10, 12], "sigma_model": [10, 12], "random_se": 10, "select": 10, "mean_var_predictor": [10, 12], "choos": [10, 14], "see": 10, "center": [11, 14], "gamma_": 11, "cdot": [11, 14, 15], "nonconfom": 12, "locallyadaptivecp": 12, "local": 12, "must": [12, 15], "emb": 12, "varianc": 12, "lacp": 12, "gradientboostingregressor": 12, "regressor_q_low": 12, "250": 12, "regressor_q_hi": 12, "crq": 12, "plu": 12, "control": [12, 13], "cv_cp": 12, "scheme": [12, 14], "bag": 12, "per": 12, "enbpi": 12, "b": 12, "agg_func_loo": 12, "bootstrap": 12, "func": 12, "loo": [12, 14], "determin": 12, "xu": 12, "v1": 12, "arg": 12, "v2": 12, "oob": 12, "empti": 12, "season": 12, "onlin": 12, "necessari": 12, "sequenc": 12, "pi": 12, "adaptiveenbpi": 12, "version": [12, 14], "mean_model": 12, "aenbpi": 12, "helper": 13, "abstract": 13, "exist": [13, 14], "__call__": 13, "Not": 13, "just": 13, "placehold": 13, "interoper": 13, "determinist": 13, "ratio": 13, "iterabl": 13, "machin": 14, "right": 14, "approach": 14, "access": 14, "via": 14, "despit": 14, "effort": 14, "encount": 14, "could": 14, "stem": 14, "caus": 14, "typic": 14, "aleator": 14, "known": 14, "statist": 14, "irreduc": 14, "due": 14, "intrins": 14, "phenomenon": 14, "being": 14, "epistem": 14, "systemat": 14, "better": 14, "depend": 14, "field": 14, "major": 14, "impact": 14, "safeti": 14, "free": 14, "non": 14, "asymptot": 14, "y_i": 14, "_": 14, "mathbb": 14, "xy": 14, "big": 14, "geq": 14, "mani": 14, "frequenc": 14, "least": 14, "inequ": 14, "finit": 14, "noteworthi": 14, "therefor": 14, "condition": 14, "region": 14, "space": 14, "act": 14, "attain": 14, "black": 14, "box": 14, "common": 14, "literatur": 14, "angelopoulo": 14, "bate": 14, "angelopoulos2022": 14, "hand": 14, "introduct": 14, "awesom": 14, "github": 14, "ressourc": 14, "n_": 14, "sim": 14, "papadopoulos2002": 14, "lei2018": 14, "widehat": 14, "summar": 14, "pick": 14, "bar": 14, "r_i": 14, "dot": 14, "cardin": 14, "delta_": 14, "hereaft": 14, "papadopoulos2008": 14, "usual": 14, "again": 14, "heteroskedasc": 14, "improv": 14, "price": 14, "cost": 14, "extend": 14, "q": [14, 15], "alpha_": 14, "would": 14, "evenli": 14, "name": 14, "romano2019": 14, "correct": 14, "misspecifi": 14, "bad": 14, "approxim": 14, "were": 14, "strong": 14, "theoret": 14, "properti": 14, "inherit": 14, "accur": 14, "shown": 14, "partit": 14, "principl": 14, "barber2021": 14, "introduc": 14, "jp": 14, "dedic": 14, "goe": 14, "disjointli": 14, "s_1": 14, "s_2": 14, "s_k": 14, "belong": 14, "s_": 14, "memori": 14, "indic": 14, "wa": 14, "those": 14, "l": 14, "lfloor": 14, "rfloor": 14, "smallest": 14, "u": 14, "lceil": 14, "rceil": 14, "tbc": 14, "2021": 14, "gentl": 14, "arxiv": 14, "preprint": 14, "2107": 14, "07511": 14, "http": 14, "org": 14, "cand": 14, "j": 14, "ramda": 14, "tibshirani": 14, "ann": 14, "49": 14, "486": 14, "507": 14, "februari": 14, "1905": 14, "02928": 14, "lei": 14, "sell": 14, "rinaldo": 14, "wasserman": 14, "2018": 14, "journal": 14, "american": 14, "113": 14, "523": 14, "pp": 14, "1094": 14, "1111": 14, "1604": 14, "04173": 14, "papadopoulo": 14, "h": 14, "proedrou": 14, "vovk": 14, "v": 14, "gammerman": 14, "2002": 14, "confid": 14, "proceed": 14, "ecml": 14, "springer": 14, "com": 14, "chapter": 14, "1007": 14, "540": 14, "36755": 14, "1_29": 14, "2008": 14, "iast": 14, "confer": 14, "artifici": 14, "intellig": 14, "aia": 14, "64": 14, "69": 14, "romano": 14, "patterson": 14, "2019": 14, "neurip": 14, "03222": 14, "complement_check": 15, "inflat": 15, "factor": 15, "deriv": 15, "impli": 15, "complementari": 15, "jk": 15, "unidimension": 15}, "objects": {"": [[2, 0, 0, "-", "calibration"], [4, 0, 0, "-", "conformalization"], [7, 0, 0, "-", "metrics"], [8, 0, 0, "-", "nonconformity_scores"], [9, 0, 0, "-", "plotting"], [10, 0, 0, "-", "prediction"], [11, 0, 0, "-", "prediction_sets"]], "calibration": [[2, 1, 1, "", "BaseCalibrator"], [2, 1, 1, "", "CvPlusCalibrator"], [2, 1, 1, "", "ScoreCalibrator"]], "calibration.BaseCalibrator": [[2, 2, 1, "", "barber_weights"], [2, 2, 1, "", "calibrate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "get_norm_weights"], [2, 2, 1, "", "set_norm_weights"]], "calibration.CvPlusCalibrator": [[2, 2, 1, "", "calibrate"], [2, 2, 1, "", "fit"]], "calibration.ScoreCalibrator": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "get_nonconformity_scores"], [2, 2, 1, "", "is_conformal"], [2, 2, 1, "", "set_nonconformity_scores"]], "conformalization": [[4, 1, 1, "", "ConformalPredictor"], [4, 1, 1, "", "CrossValCpAggregator"]], "conformalization.ConformalPredictor": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "load"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "save"]], "conformalization.CrossValCpAggregator": [[4, 2, 1, "", "append_calibrator"], [4, 2, 1, "", "append_predictor"], [4, 2, 1, "", "get_nonconformity_scores"], [4, 2, 1, "", "get_weights"], [4, 2, 1, "", "predict"]], "deel.puncc.anomaly_detection": [[0, 1, 1, "", "SplitCAD"]], "deel.puncc.anomaly_detection.SplitCAD": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"]], "deel.puncc.api.utils": [[15, 3, 1, "", "alpha_calib_check"], [15, 3, 1, "", "quantile"]], "deel.puncc.classification": [[3, 1, 1, "", "APS"], [3, 1, 1, "", "RAPS"]], "deel.puncc.classification.APS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.classification.RAPS": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "predict"]], "deel.puncc.regression": [[12, 1, 1, "", "AdaptiveEnbPI"], [12, 1, 1, "", "CQR"], [12, 1, 1, "", "CVPlus"], [12, 1, 1, "", "EnbPI"], [12, 1, 1, "", "LocallyAdaptiveCP"], [12, 1, 1, "", "SplitCP"]], "deel.puncc.regression.AdaptiveEnbPI": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "predict"]], "deel.puncc.regression.CQR": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "get_nonconformity_scores"], [12, 2, 1, "", "predict"]], "deel.puncc.regression.CVPlus": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "get_nonconformity_scores"], [12, 2, 1, "", "predict"]], "deel.puncc.regression.EnbPI": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "predict"]], "deel.puncc.regression.LocallyAdaptiveCP": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "get_nonconformity_scores"], [12, 2, 1, "", "predict"]], "deel.puncc.regression.SplitCP": [[12, 2, 1, "", "fit"], [12, 2, 1, "", "get_nonconformity_scores"], [12, 2, 1, "", "predict"]], "metrics": [[7, 3, 1, "", "classification_mean_coverage"], [7, 3, 1, "", "classification_mean_size"], [7, 3, 1, "", "regression_ace"], [7, 3, 1, "", "regression_mean_coverage"], [7, 3, 1, "", "regression_sharpness"]], "nonconformity_scores": [[8, 3, 1, "", "cqr_score"], [8, 3, 1, "", "mad"], [8, 3, 1, "", "raps_score"], [8, 3, 1, "", "raps_score_builder"], [8, 3, 1, "", "scaled_mad"]], "plotting": [[9, 3, 1, "", "plot_prediction_intervals"]], "prediction": [[10, 1, 1, "", "BasePredictor"], [10, 1, 1, "", "DualPredictor"], [10, 1, 1, "", "MeanVarPredictor"]], "prediction.BasePredictor": [[10, 2, 1, "", "copy"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "predict"]], "prediction.DualPredictor": [[10, 2, 1, "", "copy"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "predict"]], "prediction.MeanVarPredictor": [[10, 2, 1, "", "copy"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "predict"]], "prediction_sets": [[11, 3, 1, "", "constant_interval"], [11, 3, 1, "", "cqr_interval"], [11, 3, 1, "", "raps_set"], [11, 3, 1, "", "raps_set_builder"], [11, 3, 1, "", "scaled_interval"]], "splitting": [[13, 1, 1, "", "BaseSplitter"], [13, 1, 1, "", "IdSplitter"], [13, 1, 1, "", "KFoldSplitter"], [13, 1, 1, "", "RandomSplitter"]], "splitting.IdSplitter": [[13, 2, 1, "", "__call__"]], "splitting.KFoldSplitter": [[13, 2, 1, "", "__call__"]], "splitting.RandomSplitter": [[13, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"anomali": [0, 5, 14], "detect": [0, 5, 14], "api": 1, "tabl": [1, 5], "content": [1, 5, 6], "": [1, 6], "modul": 1, "overview": [1, 14], "conformalpredictor": 1, "predictor": 1, "calibr": [1, 2], "splitter": 1, "classif": [3, 5, 14], "conform": [4, 5, 14], "quickstart": 5, "regress": [5, 12, 14], "diabet": 5, "dataset": 5, "predict": [5, 10, 11, 14], "model": 5, "mnist": 5, "two": 5, "moon": 5, "welcom": 6, "puncc": 6, "document": 6, "metric": 7, "nonconform": 8, "score": 8, "plot": 9, "set": [11, 14], "split": [13, 14], "theori": 14, "uncertainti": 14, "quantif": 14, "induct": 14, "local": 14, "adapt": 14, "quantil": 14, "cqr": 14, "cross": 14, "valid": 14, "cv": 14, "jackknif": 14, "ensembl": 14, "batch": 14, "interv": 14, "enbpi": 14, "ap": 14, "regular": 14, "rap": 14, "refer": 14, "util": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"\ud83d\udea9 Anomaly detection": [[0, "anomaly-detection"]], "\ud83d\udcbb API": [[1, "api"]], "Table of Contents": [[1, "table-of-contents"], [5, "table-of-contents"]], "API\u2019s Modules": [[1, "api-s-modules"]], "Overview": [[1, "overview"]], "ConformalPredictor": [[1, "conformalpredictor"]], "Predictor": [[1, "predictor"]], "Calibrator": [[1, "calibrator"]], "Splitter": [[1, "splitter"]], "Calibration": [[2, "calibration"]], "\ud83d\udcca Classification": [[3, "classification"]], "Conformalization": [[4, "module-conformalization"]], "\ud83d\ude80 Quickstart": [[5, "quickstart"]], "\ud83d\udcc8 Conformal Regression": [[5, "conformal-regression"]], "\ud83d\udcbe Diabetes Dataset": [[5, "diabetes-dataset"]], "\ud83d\udd2e Prediction model": [[5, "prediction-model"]], "\u2699\ufe0f Conformal prediction": [[5, "conformal-prediction"], [5, "id2"]], "\ud83d\udcca Conformal Classification": [[5, "conformal-classification"]], "\ud83d\udcbe MNIST Dataset": [[5, "mnist-dataset"]], "\ud83d\udd2e Prediction Model": [[5, "id1"]], "\ud83d\udea9 Conformal Anomaly Detection": [[5, "conformal-anomaly-detection"]], "\ud83d\udcbe Two moons Dataset": [[5, "two-moons-dataset"]], "\ud83d\udd2e Anomaly detection model": [[5, "anomaly-detection-model"]], "\u2699\ufe0f Conformal Anomaly Detection": [[5, "id3"]], "Welcome to puncc\u2019s documentation!": [[6, "welcome-to-puncc-s-documentation"]], "Contents": [[6, null]], "\ud83d\udccf Metrics": [[7, "module-metrics"]], "Nonconformity scores": [[8, "module-nonconformity_scores"]], "\ud83d\uddbc\ufe0f Plotting": [[9, "module-plotting"]], "Prediction": [[10, "prediction"]], "Prediction sets": [[11, "module-prediction_sets"]], "\ud83d\udcc8 Regression": [[12, "regression"]], "Splitting": [[13, "splitting"]], "\ud83d\udcc8 Theory overview": [[14, "theory-overview"]], "Uncertainty Quantification": [[14, "uncertainty-quantification"]], "Conformal Prediction": [[14, "conformal-prediction"]], "Conformal Regression": [[14, "conformal-regression"]], "Split (inductive) Conformal": [[14, "split-inductive-conformal"]], "Locally Adaptive Conformal Regression": [[14, "locally-adaptive-conformal-regression"]], "Conformalized Quantile Regression (CQR)": [[14, "conformalized-quantile-regression-cqr"]], "Cross-validation+ (CV+), Jackknife+": [[14, "cross-validation-cv-jackknife"]], "Ensemble Batch Prediction Intervals (EnbPI)": [[14, "ensemble-batch-prediction-intervals-enbpi"]], "Conformal Classification": [[14, "conformal-classification"]], "Adaptive Prediction Sets (APS)": [[14, "adaptive-prediction-sets-aps"]], "Regularized Adaptive Prediction Sets (RAPS)": [[14, "regularized-adaptive-prediction-sets-raps"]], "Conformal Anomaly Detection": [[14, "conformal-anomaly-detection"]], "References": [[14, "references"]], "Utils": [[15, "utils"]]}, "indexentries": {"splitcad (class in deel.puncc.anomaly_detection)": [[0, "deel.puncc.anomaly_detection.SplitCAD"]], "fit() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.fit"]], "predict() (deel.puncc.anomaly_detection.splitcad method)": [[0, "deel.puncc.anomaly_detection.SplitCAD.predict"]], "basecalibrator (class in calibration)": [[2, "calibration.BaseCalibrator"]], "cvpluscalibrator (class in calibration)": [[2, "calibration.CvPlusCalibrator"]], "scorecalibrator (class in calibration)": [[2, "calibration.ScoreCalibrator"]], "barber_weights() (calibration.basecalibrator static method)": [[2, "calibration.BaseCalibrator.barber_weights"]], "calibrate() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.calibrate"]], "calibrate() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.calibrate"]], "calibration": [[2, "module-calibration"]], "fit() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.fit"]], "fit() (calibration.cvpluscalibrator method)": [[2, "calibration.CvPlusCalibrator.fit"]], "fit() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.fit"]], "get_nonconformity_scores() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_nonconformity_scores"]], "get_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.get_nonconformity_scores"]], "get_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.get_norm_weights"]], "is_conformal() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.is_conformal"]], "module": [[2, "module-calibration"], [4, "module-conformalization"], [7, "module-metrics"], [8, "module-nonconformity_scores"], [9, "module-plotting"], [10, "module-prediction"], [11, "module-prediction_sets"]], "set_nonconformity_scores() (calibration.scorecalibrator method)": [[2, "calibration.ScoreCalibrator.set_nonconformity_scores"]], "set_norm_weights() (calibration.basecalibrator method)": [[2, "calibration.BaseCalibrator.set_norm_weights"]], "aps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.APS"]], "raps (class in deel.puncc.classification)": [[3, "deel.puncc.classification.RAPS"]], "fit() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.fit"]], "fit() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.fit"]], "predict() (deel.puncc.classification.aps method)": [[3, "deel.puncc.classification.APS.predict"]], "predict() (deel.puncc.classification.raps method)": [[3, "deel.puncc.classification.RAPS.predict"]], "conformalpredictor (class in conformalization)": [[4, "conformalization.ConformalPredictor"]], "crossvalcpaggregator (class in conformalization)": [[4, "conformalization.CrossValCpAggregator"]], "append_calibrator() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_calibrator"]], "append_predictor() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.append_predictor"]], "conformalization": [[4, "module-conformalization"]], "fit() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.fit"]], "get_nonconformity_scores() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_nonconformity_scores"]], "get_nonconformity_scores() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_nonconformity_scores"]], "get_weights() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.get_weights"]], "get_weights() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.get_weights"]], "load() (conformalization.conformalpredictor static method)": [[4, "conformalization.ConformalPredictor.load"]], "predict() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.predict"]], "predict() (conformalization.crossvalcpaggregator method)": [[4, "conformalization.CrossValCpAggregator.predict"]], "save() (conformalization.conformalpredictor method)": [[4, "conformalization.ConformalPredictor.save"]], "classification_mean_coverage() (in module metrics)": [[7, "metrics.classification_mean_coverage"]], "classification_mean_size() (in module metrics)": [[7, "metrics.classification_mean_size"]], "metrics": [[7, "module-metrics"]], "regression_ace() (in module metrics)": [[7, "metrics.regression_ace"]], "regression_mean_coverage() (in module metrics)": [[7, "metrics.regression_mean_coverage"]], "regression_sharpness() (in module metrics)": [[7, "metrics.regression_sharpness"]], "cqr_score() (in module nonconformity_scores)": [[8, "nonconformity_scores.cqr_score"]], "mad() (in module nonconformity_scores)": [[8, "nonconformity_scores.mad"]], "nonconformity_scores": [[8, "module-nonconformity_scores"]], "raps_score() (in module nonconformity_scores)": [[8, "nonconformity_scores.raps_score"]], "raps_score_builder() (in module nonconformity_scores)": [[8, "nonconformity_scores.raps_score_builder"]], "scaled_mad() (in module nonconformity_scores)": [[8, "nonconformity_scores.scaled_mad"]], "plot_prediction_intervals() (in module plotting)": [[9, "plotting.plot_prediction_intervals"]], "plotting": [[9, "module-plotting"]], "basepredictor (class in prediction)": [[10, "prediction.BasePredictor"]], "dualpredictor (class in prediction)": [[10, "prediction.DualPredictor"]], "meanvarpredictor (class in prediction)": [[10, "prediction.MeanVarPredictor"]], "copy() (prediction.basepredictor method)": [[10, "prediction.BasePredictor.copy"]], "copy() (prediction.dualpredictor method)": [[10, "prediction.DualPredictor.copy"]], "copy() (prediction.meanvarpredictor method)": [[10, "prediction.MeanVarPredictor.copy"]], "fit() (prediction.basepredictor method)": [[10, "prediction.BasePredictor.fit"]], "fit() (prediction.dualpredictor method)": [[10, "prediction.DualPredictor.fit"]], "fit() (prediction.meanvarpredictor method)": [[10, "prediction.MeanVarPredictor.fit"]], "predict() (prediction.basepredictor method)": [[10, "prediction.BasePredictor.predict"]], "predict() (prediction.dualpredictor method)": [[10, "prediction.DualPredictor.predict"]], "predict() (prediction.meanvarpredictor method)": [[10, "prediction.MeanVarPredictor.predict"]], "prediction": [[10, "module-prediction"]], "constant_interval() (in module prediction_sets)": [[11, "prediction_sets.constant_interval"]], "cqr_interval() (in module prediction_sets)": [[11, "prediction_sets.cqr_interval"]], "prediction_sets": [[11, "module-prediction_sets"]], "raps_set() (in module prediction_sets)": [[11, "prediction_sets.raps_set"]], "raps_set_builder() (in module prediction_sets)": [[11, "prediction_sets.raps_set_builder"]], "scaled_interval() (in module prediction_sets)": [[11, "prediction_sets.scaled_interval"]], "adaptiveenbpi (class in deel.puncc.regression)": [[12, "deel.puncc.regression.AdaptiveEnbPI"]], "cqr (class in deel.puncc.regression)": [[12, "deel.puncc.regression.CQR"]], "cvplus (class in deel.puncc.regression)": [[12, "deel.puncc.regression.CVPlus"]], "enbpi (class in deel.puncc.regression)": [[12, "deel.puncc.regression.EnbPI"]], "locallyadaptivecp (class in deel.puncc.regression)": [[12, "deel.puncc.regression.LocallyAdaptiveCP"]], "splitcp (class in deel.puncc.regression)": [[12, "deel.puncc.regression.SplitCP"]], "fit() (deel.puncc.regression.adaptiveenbpi method)": [[12, "deel.puncc.regression.AdaptiveEnbPI.fit"]], "fit() (deel.puncc.regression.cqr method)": [[12, "deel.puncc.regression.CQR.fit"]], "fit() (deel.puncc.regression.cvplus method)": [[12, "deel.puncc.regression.CVPlus.fit"]], "fit() (deel.puncc.regression.enbpi method)": [[12, "deel.puncc.regression.EnbPI.fit"]], "fit() (deel.puncc.regression.locallyadaptivecp method)": [[12, "deel.puncc.regression.LocallyAdaptiveCP.fit"]], "fit() (deel.puncc.regression.splitcp method)": [[12, "deel.puncc.regression.SplitCP.fit"]], "get_nonconformity_scores() (deel.puncc.regression.cqr method)": [[12, "deel.puncc.regression.CQR.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.cvplus method)": [[12, "deel.puncc.regression.CVPlus.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.locallyadaptivecp method)": [[12, "deel.puncc.regression.LocallyAdaptiveCP.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.splitcp method)": [[12, "deel.puncc.regression.SplitCP.get_nonconformity_scores"]], "predict() (deel.puncc.regression.adaptiveenbpi method)": [[12, "deel.puncc.regression.AdaptiveEnbPI.predict"]], "predict() (deel.puncc.regression.cqr method)": [[12, "deel.puncc.regression.CQR.predict"]], "predict() (deel.puncc.regression.cvplus method)": [[12, "deel.puncc.regression.CVPlus.predict"]], "predict() (deel.puncc.regression.enbpi method)": [[12, "deel.puncc.regression.EnbPI.predict"]], "predict() (deel.puncc.regression.locallyadaptivecp method)": [[12, "deel.puncc.regression.LocallyAdaptiveCP.predict"]], "predict() (deel.puncc.regression.splitcp method)": [[12, "deel.puncc.regression.SplitCP.predict"]], "basesplitter (class in splitting)": [[13, "splitting.BaseSplitter"]], "idsplitter (class in splitting)": [[13, "splitting.IdSplitter"]], "kfoldsplitter (class in splitting)": [[13, "splitting.KFoldSplitter"]], "randomsplitter (class in splitting)": [[13, "splitting.RandomSplitter"]], "__call__() (splitting.idsplitter method)": [[13, "splitting.IdSplitter.__call__"]], "__call__() (splitting.kfoldsplitter method)": [[13, "splitting.KFoldSplitter.__call__"]], "__call__() (splitting.randomsplitter method)": [[13, "splitting.RandomSplitter.__call__"]], "alpha_calib_check() (in module deel.puncc.api.utils)": [[15, "deel.puncc.api.utils.alpha_calib_check"]], "quantile() (in module deel.puncc.api.utils)": [[15, "deel.puncc.api.utils.quantile"]]}})